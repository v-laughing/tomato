(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{1246:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("ul",[n("li",[n("RouterLink",{attrs:{to:"/cs/leetcode/greedy.html#1-分配饼干"}},[t._v("1. 分配饼干")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/cs/leetcode/greedy.html#2-不重叠的区间个数"}},[t._v("2. 不重叠的区间个数")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/cs/leetcode/greedy.html#3-投飞镖刺破气球"}},[t._v("3. 投飞镖刺破气球")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/cs/leetcode/greedy.html#4-根据身高和序号重组队列"}},[t._v("4. 根据身高和序号重组队列")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/cs/leetcode/greedy.html#5-买卖股票最大的收益"}},[t._v("5. 买卖股票最大的收益")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/cs/leetcode/greedy.html#6-买卖股票的最大收益-ii"}},[t._v("6. 买卖股票的最大收益 II")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/cs/leetcode/greedy.html#7-种植花朵"}},[t._v("7. 种植花朵")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/cs/leetcode/greedy.html#8-判断是否为子序列"}},[t._v("8. 判断是否为子序列")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/cs/leetcode/greedy.html#9-修改一个数成为非递减数组"}},[t._v("9. 修改一个数成为非递减数组")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/cs/leetcode/greedy.html#10-子数组最大的和"}},[t._v("10. 子数组最大的和")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/cs/leetcode/greedy.html#11-分隔字符串使同种字符出现在一起"}},[t._v("11. 分隔字符串使同种字符出现在一起")])],1)]),t._v(" "),n("p",[t._v("保证每次操作都是局部最优的，并且最后得到的结果是全局最优的。")]),t._v(" "),n("h1",{attrs:{id:"_1-分配饼干"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-分配饼干"}},[t._v("#")]),t._v(" 1. 分配饼干")]),t._v(" "),n("p",[t._v("455. Assign Cookies (Easy)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/assign-cookies/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode"),n("OutboundLink")],1),t._v(" / "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/assign-cookies/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("Input: grid[1,3], size[1,2,4]\nOutput: 2\n")])])]),n("p",[t._v("题目描述：每个孩子都有一个满足度 grid，每个饼干都有一个大小 size，只有饼干的大小大于等于一个孩子的满足度，该孩子才会获得满足。求解最多可以获得满足的孩子数量。")]),t._v(" "),n("p",[n("strong",[t._v("贪心策略：")])]),t._v(" "),n("ol",[n("li",[t._v("给一个孩子的饼干应当"),n("mark",[t._v("尽量小并且又能满足")]),t._v("该孩子，这样大饼干才能拿来给满足度比较大的孩子。")]),t._v(" "),n("li",[t._v("因为满足度最小的孩子最容易得到满足，所以"),n("mark",[t._v("先满足满足度最小")]),t._v("的孩子。")])]),t._v(" "),n("p",[t._v("在以上的解法中，我们只在每次分配时饼干时选择一种看起来是当前最优的分配方法，但无法保证这种局部最优的分配方法最后能得到全局最优解。我们假设能得到全局最优解，并使用反证法进行证明，即假设存在一种比我们使用的贪心策略更优的最优策略。如果不存在这种最优策略，表示贪心策略就是最优策略，得到的解也就是全局最优解。")]),t._v(" "),n("p",[t._v("证明：假设在某次选择中，贪心策略选择给当前满足度最小的孩子分配第 m 个饼干，第 m 个饼干为可以满足该孩子的最小饼干。假设存在一种最优策略，可以给该孩子分配第 n 个饼干，并且 m < n。我们可以发现，经过这一轮分配，贪心策略分配后剩下的饼干一定有一个比最优策略来得大。因此在后续的分配中，贪心策略一定能满足更多的孩子。也就是说不存在比贪心策略更优的策略，即贪心策略就是最优策略。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(937),alt:"avatar | 430"}}),n("br")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("find_content_children")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("grid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    grid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sort"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sort"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    gn "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("grid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    gi "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" size"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" gi "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" gn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" grid"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("gi"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            gi "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" gi      \n")])])]),n("h1",{attrs:{id:"_2-不重叠的区间个数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-不重叠的区间个数"}},[t._v("#")]),t._v(" 2. 不重叠的区间个数")]),t._v(" "),n("p",[t._v("435. Non-overlapping Intervals (Medium)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/non-overlapping-intervals/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode"),n("OutboundLink")],1),t._v(" / "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/non-overlapping-intervals/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("Input: [ [1,2], [1,2], [1,2] ]\n\nOutput: 2\n\nExplanation: You need to remove two [1,2] to make the rest of intervals non-overlapping.\n")])])]),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("Input: [ [1,2], [2,3] ]\n\nOutput: 0\n\nExplanation: You don't need to remove any of the intervals since they're already non-overlapping.\n")])])]),n("p",[t._v("题目描述：计算让一组区间不重叠所需要移除的区间个数。")]),t._v(" "),n("p",[t._v("转化为"),n("strong",[t._v("贪心问题")]),t._v("：找到尽可能多的区间，使其构成不重叠的区间。\n然后用区间总个数减去不重叠区间的个数。")]),t._v(" "),n("p",[n("strong",[t._v("贪心策略：使得每次选择的区间的结尾部分值尽可能小。")])]),t._v(" "),n("p",[t._v("按区间的结尾进行排序，每次选择结尾最小，并且和前一个区间不重叠的区间。")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("erase_overlap_intervals")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intervals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" intervals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    intervals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sort"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" inte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    end "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" intervals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    cnt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" intervals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" end"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            cnt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n            end "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("intervals"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" cnt\n")])])]),n("h1",{attrs:{id:"_3-投飞镖刺破气球"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-投飞镖刺破气球"}},[t._v("#")]),t._v(" 3. 投飞镖刺破气球")]),t._v(" "),n("p",[t._v("452. Minimum Number of Arrows to Burst Balloons (Medium)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode"),n("OutboundLink")],1),t._v(" / "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/minimum-number-of-arrows-to-burst-balloons/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("Input:\n[[10,16], [2,8], [1,6], [7,12]]\n\nOutput:\n2\n")])])]),n("p",[t._v("题目描述：气球在一个水平数轴上摆放，可以重叠，飞镖垂直投向坐标轴，使得路径上的气球都被刺破。求解最小的投飞镖次数使所有气球都被刺破。")]),t._v(" "),n("p",[t._v("也是计算不重叠的区间个数，不过和 Non-overlapping Intervals 的区别在于，[1, 2] 和 [2, 3] 在本题中算是重叠区间。")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("find_min_arrow_shots")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("points"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" points"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    points"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sort"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" inte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" inte"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    end "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" points"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    cnt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" points"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" s "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" end"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            cnt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n            end "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" e \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cnt\n")])])]),n("h1",{attrs:{id:"_4-根据身高和序号重组队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-根据身高和序号重组队列"}},[t._v("#")]),t._v(" 4. 根据身高和序号重组队列")]),t._v(" "),n("p",[t._v("406. Queue Reconstruction by Height(Medium)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/queue-reconstruction-by-height/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode"),n("OutboundLink")],1),t._v(" / "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/queue-reconstruction-by-height/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("Input:\n[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]\n\nOutput:\n[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]\n")])])]),n("p",[t._v("题目描述：一个学生用两个分量 (h, k) 描述，h 表示身高，k 表示排在前面的有 k 个学生的身高比他高或者和他一样高，排序原数组使其满足这种排序方式。")]),t._v(" "),n("p",[t._v("为了使插入操作不影响后续的操作，"),n("mark",[t._v("身高较高的学生应该先做插入操作")]),t._v("，否则身高较小的学生原先正确插入的第 k 个位置可能会变成第 k+1 个位置。")]),t._v(" "),n("p",[t._v("身高 h 降序、"),n("mark",[t._v("个数 k 值升序")]),t._v("，然后将某个学生插入队列的第 k 个位置中。")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("reconstruct_queue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sort"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("insert"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" p"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n")])])]),n("h1",{attrs:{id:"_5-买卖股票最大的收益"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-买卖股票最大的收益"}},[t._v("#")]),t._v(" 5. 买卖股票最大的收益")]),t._v(" "),n("p",[t._v("121. Best Time to Buy and Sell Stock (Easy)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode"),n("OutboundLink")],1),t._v(" / "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("题目描述：一次股票交易包含买入和卖出，只进行一次交易，求最大收益。")]),t._v(" "),n("p",[t._v("令"),n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("mi",[t._v("p")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("p[i]")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"base textstyle uncramped"},[n("span",{staticClass:"mord mathit"},[t._v("p")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("表示第i天卖出可获得的最大收益，"),n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("mi",[t._v("a")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("a[i]")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"base textstyle uncramped"},[n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("为第i天股票价格，则有：")]),t._v(" "),n("p",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("mi",[t._v("p")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")]),n("mo",[t._v("=")]),n("mi",[t._v("a")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")]),n("mo",[t._v("−")]),n("mi",[t._v("m")]),n("mi",[t._v("i")]),n("mi",[t._v("n")]),n("mo",[t._v("{")]),n("mi",[t._v("a")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")]),n("mo",[t._v("}")]),n("mo",{attrs:{separator:"true"}},[t._v(",")]),n("mn",[t._v("0")]),n("mo",[t._v("≤")]),n("mi",[t._v("i")]),n("mo",[t._v("≤")]),n("mi",[t._v("n")]),n("mo",[t._v("−")]),n("mn",[t._v("1")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("p[i] = a[i] - min\\{a[i]\\}, 0 \\leq i \\leq n-1\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"base displaystyle textstyle uncramped"},[n("span",{staticClass:"mord mathit"},[t._v("p")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")]),n("span",{staticClass:"mrel"},[t._v("=")]),n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")]),n("span",{staticClass:"mbin"},[t._v("−")]),n("span",{staticClass:"mord mathit"},[t._v("m")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mord mathit"},[t._v("n")]),n("span",{staticClass:"mopen"},[t._v("{")]),n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")]),n("span",{staticClass:"mclose"},[t._v("}")]),n("span",{staticClass:"mpunct"},[t._v(",")]),n("span",{staticClass:"mord mathrm"},[t._v("0")]),n("span",{staticClass:"mrel"},[t._v("≤")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mrel"},[t._v("≤")]),n("span",{staticClass:"mord mathit"},[t._v("n")]),n("span",{staticClass:"mbin"},[t._v("−")]),n("span",{staticClass:"mord mathrm"},[t._v("1")])])])])])]),t._v(" "),n("p",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("mi",[t._v("t")]),n("mi",[t._v("a")]),n("mi",[t._v("r")]),n("mi",[t._v("g")]),n("mi",[t._v("e")]),n("mi",[t._v("t")]),n("mo",[t._v("=")]),n("mi",[t._v("m")]),n("mi",[t._v("a")]),n("mi",[t._v("x")]),n("mo",[t._v("{")]),n("mi",[t._v("p")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")]),n("mo",[t._v("}")]),n("mo",{attrs:{separator:"true"}},[t._v(",")]),n("mn",[t._v("0")]),n("mo",[t._v("≤")]),n("mi",[t._v("i")]),n("mo",[t._v("≤")]),n("mi",[t._v("n")]),n("mo",[t._v("−")]),n("mn",[t._v("1")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("target = max\\{p[i] \\}, 0 \\leq i \\leq n-1\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"base displaystyle textstyle uncramped"},[n("span",{staticClass:"mord mathit"},[t._v("t")]),n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),n("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),n("span",{staticClass:"mord mathit"},[t._v("e")]),n("span",{staticClass:"mord mathit"},[t._v("t")]),n("span",{staticClass:"mrel"},[t._v("=")]),n("span",{staticClass:"mord mathit"},[t._v("m")]),n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mord mathit"},[t._v("x")]),n("span",{staticClass:"mopen"},[t._v("{")]),n("span",{staticClass:"mord mathit"},[t._v("p")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")]),n("span",{staticClass:"mclose"},[t._v("}")]),n("span",{staticClass:"mpunct"},[t._v(",")]),n("span",{staticClass:"mord mathrm"},[t._v("0")]),n("span",{staticClass:"mrel"},[t._v("≤")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mrel"},[t._v("≤")]),n("span",{staticClass:"mord mathit"},[t._v("n")]),n("span",{staticClass:"mbin"},[t._v("−")]),n("span",{staticClass:"mord mathrm"},[t._v("1")])])])])])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max_profit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prices"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" prices"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    cur_min "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prices"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    target "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" prices"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" cur_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            cur_min "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n        target "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cur_min"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" target\n")])])]),n("h1",{attrs:{id:"_6-买卖股票的最大收益-ii"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6-买卖股票的最大收益-ii"}},[t._v("#")]),t._v(" 6. 买卖股票的最大收益 II")]),t._v(" "),n("p",[t._v("122. Best Time to Buy and Sell Stock II (Easy)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode"),n("OutboundLink")],1),t._v(" / "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/best-time-to-buy-and-sell-stock-ii/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("题目描述：可以进行多次交易，多次交易之间不能交叉进行，可以进行多次交易。")]),t._v(" "),n("p",[n("strong",[t._v("贪心策略：")]),t._v(" "),n("strong",[t._v("只要此次交易有收益，就交易。")])]),t._v(" "),n("p",[t._v("考虑三个点，且 a <= b <= c，有两种情况：")]),t._v(" "),n("ol",[n("li",[t._v("在b，c点交易，则总收益为 (c - b) + (b - a) 。")]),t._v(" "),n("li",[t._v("仅在c点交易，则总收益为c - a。")])]),t._v(" "),n("p",[t._v("两种情况是等同的。")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max_profit2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prices"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    target "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    cur_hold "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" prices"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" prices"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" cur_hold"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            target "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" cur_hold\n        cur_hold "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" target\n")])])]),n("h1",{attrs:{id:"_7-种植花朵"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-种植花朵"}},[t._v("#")]),t._v(" 7. 种植花朵")]),t._v(" "),n("p",[t._v("605. Can Place Flowers (Easy)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/can-place-flowers/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode"),n("OutboundLink")],1),t._v(" / "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/can-place-flowers/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("Input: flowerbed = [1,0,0,0,1], n = 1\nOutput: True\n")])])]),n("p",[t._v("题目描述：flowerbed 数组中 1 表示已经种下了花朵。花朵之间至少需要一个单位的间隔，求解是否能种下 n 朵花。")]),t._v(" "),n("p",[n("strong",[t._v("KEY:")]),t._v("  变量will_place表"),n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("mi",[t._v("i")]),n("mo",[t._v("−")]),n("mn",[t._v("1")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("i-1")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.65952em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"0.74285em","vertical-align":"-0.08333em"}}),n("span",{staticClass:"base textstyle uncramped"},[n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mbin"},[t._v("−")]),n("span",{staticClass:"mord mathrm"},[t._v("1")])])])]),t._v("位置是否为0。")]),t._v(" "),n("p",[n("strong",[t._v("NOTICE:")]),t._v(" 要考虑后一个数")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("can_place_flowers")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    will_place "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    l "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("l"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            will_place "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" will_place"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" l "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" flowerbed"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n            will_place "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" will_place \n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n")])])]),n("h1",{attrs:{id:"_8-判断是否为子序列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8-判断是否为子序列"}},[t._v("#")]),t._v(" 8. 判断是否为子序列")]),t._v(" "),n("p",[t._v("392. Is Subsequence (Medium)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/is-subsequence/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode"),n("OutboundLink")],1),t._v(" / "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/is-subsequence/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v('s = "abc", t = "ahbgdc"\nReturn true.\n')])])]),n("p",[t._v("双指针解法")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("is_subsequence")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    s_len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" s_len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" s_len "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n            j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n")])])]),n("h1",{attrs:{id:"_9-修改一个数成为非递减数组"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9-修改一个数成为非递减数组"}},[t._v("#")]),t._v(" 9. 修改一个数成为非递减数组")]),t._v(" "),n("p",[t._v("665. Non-decreasing Array (Easy)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/non-decreasing-array/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode"),n("OutboundLink")],1),t._v(" / "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/non-decreasing-array/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("Input: [4,2,3]\nOutput: True\nExplanation: You could modify the first 4 to 1 to get a non-decreasing array.\n")])])]),n("p",[t._v("题目描述：判断一个数组是否能只修改一个数就成为非递减数组")]),t._v(" "),n("p",[n("strong",[t._v("KEY")]),t._v(": "),n("strong",[t._v("遍历索引为i时，保证0~i内数组是有序的。")]),t._v("\nwhen nums[i] < nums[i - 1] ：")]),t._v(" "),n("ol",[n("li",[t._v("令nums[i - 1] = nums[i]，为了不影响了后续操作，nums[i]应尽可能小。")]),t._v(" "),n("li",[t._v("当 nums[i] < nums[i - 2]，修改 nums[i - 1] = nums[i] 不能使数组成为非递减数组，只能修改 nums[i] = nums[i - 1]。")])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("check_possibility")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    cnt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" cnt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            cnt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" cnt "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("            \n")])])]),n("h1",{attrs:{id:"_10-子数组最大的和"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_10-子数组最大的和"}},[t._v("#")]),t._v(" 10. 子数组最大的和")]),t._v(" "),n("p",[t._v("53. Maximum Subarray (Easy)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/maximum-subarray/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode"),n("OutboundLink")],1),t._v(" / "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/maximum-subarray/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v("For example, given the array [-2,1,-3,4,-1,2,1,-5,4],\nthe contiguous subarray [4,-1,2,1] has the largest sum = 6.\n")])])]),n("p",[t._v("解析：\n令"),n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("mi",[t._v("c")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("c[i]")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"base textstyle uncramped"},[n("span",{staticClass:"mord mathit"},[t._v("c")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("表示以i位置结尾的最大子数组的和，"),n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("mi",[t._v("a")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("a[i]")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"base textstyle uncramped"},[n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("表数组i位置的值，则有")]),t._v(" "),n("p",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("mi",[t._v("c")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")]),n("mo",[t._v("=")]),n("mi",[t._v("m")]),n("mi",[t._v("a")]),n("mi",[t._v("x")]),n("mo",[t._v("{")]),n("mi",[t._v("c")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("−")]),n("mn",[t._v("1")]),n("mo",[t._v("]")]),n("mo",[t._v("+")]),n("mi",[t._v("a")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")]),n("mo",{attrs:{separator:"true"}},[t._v(",")]),n("mi",[t._v("a")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")]),n("mo",[t._v("}")]),n("mo",{attrs:{separator:"true"}},[t._v(",")]),n("mn",[t._v("1")]),n("mo",[t._v("≤")]),n("mi",[t._v("i")]),n("mo",[t._v("≤")]),n("mi",[t._v("n")]),n("mo",[t._v("−")]),n("mn",[t._v("1")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("c[i]=max\\{c[i-1]+a[i], a[i]\\}, 1 \\leq i \\leq n-1\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"base displaystyle textstyle uncramped"},[n("span",{staticClass:"mord mathit"},[t._v("c")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")]),n("span",{staticClass:"mrel"},[t._v("=")]),n("span",{staticClass:"mord mathit"},[t._v("m")]),n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mord mathit"},[t._v("x")]),n("span",{staticClass:"mopen"},[t._v("{")]),n("span",{staticClass:"mord mathit"},[t._v("c")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mbin"},[t._v("−")]),n("span",{staticClass:"mord mathrm"},[t._v("1")]),n("span",{staticClass:"mclose"},[t._v("]")]),n("span",{staticClass:"mbin"},[t._v("+")]),n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")]),n("span",{staticClass:"mpunct"},[t._v(",")]),n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")]),n("span",{staticClass:"mclose"},[t._v("}")]),n("span",{staticClass:"mpunct"},[t._v(",")]),n("span",{staticClass:"mord mathrm"},[t._v("1")]),n("span",{staticClass:"mrel"},[t._v("≤")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mrel"},[t._v("≤")]),n("span",{staticClass:"mord mathit"},[t._v("n")]),n("span",{staticClass:"mbin"},[t._v("−")]),n("span",{staticClass:"mord mathrm"},[t._v("1")])])])])])]),t._v(" "),n("p",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("mi",[t._v("t")]),n("mi",[t._v("a")]),n("mi",[t._v("r")]),n("mi",[t._v("g")]),n("mi",[t._v("e")]),n("mi",[t._v("t")]),n("mo",[t._v("=")]),n("mi",[t._v("m")]),n("mi",[t._v("a")]),n("mi",[t._v("x")]),n("mo",[t._v("{")]),n("mi",[t._v("c")]),n("mo",[t._v("[")]),n("mi",[t._v("i")]),n("mo",[t._v("]")]),n("mi",{attrs:{mathvariant:"normal"}},[t._v("∣")]),n("mn",[t._v("0")]),n("mo",[t._v("≤")]),n("mi",[t._v("i")]),n("mo",[t._v("≤")]),n("mi",[t._v("n")]),n("mo",[t._v("−")]),n("mn",[t._v("1")]),n("mo",[t._v("}")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("target = max\\{c[i]| 0 \\leq i \\leq n-1\\}\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"base displaystyle textstyle uncramped"},[n("span",{staticClass:"mord mathit"},[t._v("t")]),n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[t._v("r")]),n("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03588em"}},[t._v("g")]),n("span",{staticClass:"mord mathit"},[t._v("e")]),n("span",{staticClass:"mord mathit"},[t._v("t")]),n("span",{staticClass:"mrel"},[t._v("=")]),n("span",{staticClass:"mord mathit"},[t._v("m")]),n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mord mathit"},[t._v("x")]),n("span",{staticClass:"mopen"},[t._v("{")]),n("span",{staticClass:"mord mathit"},[t._v("c")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mclose"},[t._v("]")]),n("span",{staticClass:"mord mathrm"},[t._v("∣")]),n("span",{staticClass:"mord mathrm"},[t._v("0")]),n("span",{staticClass:"mrel"},[t._v("≤")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mrel"},[t._v("≤")]),n("span",{staticClass:"mord mathit"},[t._v("n")]),n("span",{staticClass:"mbin"},[t._v("−")]),n("span",{staticClass:"mord mathrm"},[t._v("1")]),n("span",{staticClass:"mclose"},[t._v("}")])])])])])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("max_subarray")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    cur_sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    target "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cur_sum\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        cur_sum "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur_sum"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        target "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cur_sum"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" target\n")])])]),n("h1",{attrs:{id:"_11-分隔字符串使同种字符出现在一起"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_11-分隔字符串使同种字符出现在一起"}},[t._v("#")]),t._v(" 11. 分隔字符串使同种字符出现在一起")]),t._v(" "),n("p",[t._v("763. Partition Labels (Medium)")]),t._v(" "),n("p",[n("a",{attrs:{href:"https://leetcode.com/problems/partition-labels/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Leetcode"),n("OutboundLink")],1),t._v(" / "),n("a",{attrs:{href:"https://leetcode-cn.com/problems/partition-labels/description/",target:"_blank",rel:"noopener noreferrer"}},[t._v("力扣"),n("OutboundLink")],1)]),t._v(" "),n("div",{staticClass:"language-html extra-class"},[n("pre",{pre:!0,attrs:{class:"language-html"}},[n("code",[t._v('Input: S = "ababcbacadefegdehijhklij"\nOutput: [9,7,8]\nExplanation:\nThe partition is "ababcbaca", "defegde", "hijhklij".\nThis is a partition so that each letter appears in at most one part.\nA partition like "ababcbacadefegde", "hijhklij" is incorrect, because it splits S into less parts.\n')])])]),n("p",[t._v("题目描述：如题")]),t._v(" "),n("p",[t._v("当遇到元素a时，此段分割出的字符串的尾边界最近是最右边的元素a所在的位置。")]),t._v(" "),n("p",[t._v("记"),n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("mi",[t._v("L")]),n("mo",[t._v("[")]),n("mi",[t._v("a")]),n("mo",[t._v("]")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("L[a]")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"base textstyle uncramped"},[n("span",{staticClass:"mord mathit"},[t._v("L")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mclose"},[t._v("]")])])])]),t._v("表a元素在字符串的最右边的索引，则"),n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("msub",[n("mi",[t._v("S")]),n("mrow",[n("mi",[t._v("i")]),n("mi",[t._v("j")])],1)],1)],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("S_{ij}")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"0.969438em","vertical-align":"-0.286108em"}}),n("span",{staticClass:"base textstyle uncramped"},[n("span",{staticClass:"mord"},[n("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05764em"}},[t._v("S")]),n("span",{staticClass:"vlist"},[n("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"-0.05764em"}},[n("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[n("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),n("span",{staticClass:"reset-textstyle scriptstyle cramped"},[n("span",{staticClass:"mord scriptstyle cramped"},[n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")])])])]),n("span",{staticClass:"baseline-fix"},[n("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[n("span",{staticStyle:{"font-size":"0em"}},[t._v("​")])]),t._v("​")])])])])])]),t._v("是一个子串的条件为：")]),t._v(" "),n("p",[n("span",{staticClass:"katex-display"},[n("span",{staticClass:"katex"},[n("span",{staticClass:"katex-mathml"},[n("math",[n("semantics",[n("mrow",[n("mi",[t._v("j")]),n("mo",[t._v("=")]),n("mi",[t._v("m")]),n("mi",[t._v("a")]),n("mi",[t._v("x")]),n("mo",[t._v("{")]),n("mi",[t._v("L")]),n("mo",[t._v("[")]),n("mi",[t._v("S")]),n("mo",[t._v("[")]),n("mi",[t._v("k")]),n("mo",[t._v("]")]),n("mo",[t._v("]")]),n("mo",[t._v("}")]),n("mo",{attrs:{separator:"true"}},[t._v(",")]),n("mi",[t._v("i")]),n("mo",[t._v("≤")]),n("mi",[t._v("k")]),n("mo",[t._v("≤")]),n("mi",[t._v("j")])],1),n("annotation",{attrs:{encoding:"application/x-tex"}},[t._v("j = max\\{L[S[k]]\\}, i \\leq k \\leq j\n")])],1)],1)],1),n("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[n("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),n("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),n("span",{staticClass:"base displaystyle textstyle uncramped"},[n("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")]),n("span",{staticClass:"mrel"},[t._v("=")]),n("span",{staticClass:"mord mathit"},[t._v("m")]),n("span",{staticClass:"mord mathit"},[t._v("a")]),n("span",{staticClass:"mord mathit"},[t._v("x")]),n("span",{staticClass:"mopen"},[t._v("{")]),n("span",{staticClass:"mord mathit"},[t._v("L")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05764em"}},[t._v("S")]),n("span",{staticClass:"mopen"},[t._v("[")]),n("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),n("span",{staticClass:"mclose"},[t._v("]")]),n("span",{staticClass:"mclose"},[t._v("]")]),n("span",{staticClass:"mclose"},[t._v("}")]),n("span",{staticClass:"mpunct"},[t._v(",")]),n("span",{staticClass:"mord mathit"},[t._v("i")]),n("span",{staticClass:"mrel"},[t._v("≤")]),n("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.03148em"}},[t._v("k")]),n("span",{staticClass:"mrel"},[t._v("≤")]),n("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[t._v("j")])])])])])]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("partition_labels")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    Lindex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("a "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("enumerate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    res "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" max_lindex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("enumerate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("S"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        max_lindex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("max")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_lindex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Lindex"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" max_lindex "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            res"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" res\n")])])])])}),[],!1,null,null,null);s.default=e.exports},937:function(t,s,a){t.exports=a.p+"assets/img/e69537d2-a016-4676-b169-9ea17eeb9037.82d1f1b1.gif"}}]);