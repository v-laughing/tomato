(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{1101:function(t,v,_){"use strict";_.r(v);var e=_(7),a=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"正则表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),_("p",[t._v("正则表达式是一组由字母和符号组成的特殊文本，它可以用来从文本中找出满足你想要的格式的句子。")]),t._v(" "),_("h1",{attrs:{id:"基本概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[t._v("#")]),t._v(" 基本概念")]),t._v(" "),_("p",[t._v("正则表达式其实就是在执行搜索时的格式，它由一些字母和数字组合而成。正则表达式是大小写敏感的。")]),t._v(" "),_("div",{staticClass:"language- extra-class"},[_("pre",{pre:!0,attrs:{class:"language-text"}},[_("code",[t._v("`the` => The fat cat sat on the mat.\n")])])]),_("h2",{attrs:{id:"元字符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#元字符"}},[t._v("#")]),t._v(" 元字符")]),t._v(" "),_("p",[t._v("正则表达式主要依赖于元字符，其拥有特殊的文本含义。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("元字符")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v(".")]),t._v(" "),_("td",[t._v("句号匹配任意单个字符除了换行符。")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("[ ]")]),t._v(" "),_("td",[t._v("字符种类。匹配方括号内的任意字符。")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("[^ ]")]),t._v(" "),_("td",[t._v("否定的字符种类。匹配除了方括号里的任意字符")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("*")]),t._v(" "),_("td",[t._v("匹配>=0个重复的在*号之前的字符。")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("+")]),t._v(" "),_("td",[t._v("匹配>=1个重复的+号前的字符。")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("?")]),t._v(" "),_("td",[t._v("标记?之前的字符为可选.")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("{n,m}")]),t._v(" "),_("td",[t._v("匹配num个大括号之前的字符或字符集 (n <= num <= m).")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("(xyz)")]),t._v(" "),_("td",[t._v("字符集，匹配与 xyz 完全相等的字符串.")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("|")]),t._v(" "),_("td",[t._v("或运算符，匹配符号前或后的字符.")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\")]),t._v(" "),_("td",[t._v("转义字符,用于匹配一些保留的字符 "),_("code",[t._v("[ ] ( ) { } . * + ? ^ $ \\ |")])])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("^")]),t._v(" "),_("td",[t._v("从开始行开始匹配.")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("$")]),t._v(" "),_("td",[t._v("从末端开始匹配.")])])])]),t._v(" "),_("h3",{attrs:{id:"转义特殊字符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#转义特殊字符"}},[t._v("#")]),t._v(" 转义特殊字符")]),t._v(" "),_("p",[t._v("反斜线 "),_("code",[t._v("\\")]),t._v(" 在表达式中用于转码紧跟其后的字符。用于指定 "),_("code",[t._v("{ } [ ] / \\ + * . $ ^ | ?")]),t._v(" 这些特殊字符。如果想要匹配这些特殊字符则要在其前面加上反斜线 "),_("code",[t._v("\\")]),t._v("。")]),t._v(" "),_("p",[t._v("例如 "),_("code",[t._v(".")]),t._v(" 是用来匹配除换行符外的所有字符的。如果想要匹配句子中的 "),_("code",[t._v(".")]),t._v(" 则要写成 "),_("code",[t._v("\\.")]),t._v(" 以下这个例子 "),_("code",[t._v("\\.?")]),t._v("是选择性匹配"),_("code",[t._v(".")])]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("(f|c|m)at\\.?")]),t._v(" => The "),_("strong",[t._v("fat")]),t._v(" "),_("strong",[t._v("cat")]),t._v(" sat on the "),_("strong",[t._v("mat.")])])]),t._v(" "),_("h2",{attrs:{id:"点运算符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#点运算符"}},[t._v("#")]),t._v(" 点运算符")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v(".ar")]),t._v(" => The "),_("strong",[t._v("car")]),t._v(" "),_("strong",[t._v("par")]),t._v("ked in the "),_("strong",[t._v("gar")]),t._v("age.")])]),t._v(" "),_("h2",{attrs:{id:"字符集"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符集"}},[t._v("#")]),t._v(" 字符集")]),t._v(" "),_("p",[t._v("方括号用来指定一个字符集。可以使用连字符来指定字符集的范围。")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("[Tt]he")]),t._v(" => "),_("strong",[t._v("The")]),t._v(" car parked in "),_("strong",[t._v("the")]),t._v(" garage.")])]),t._v(" "),_("p",[t._v("方括号中没有元字符，因此句号不用转义。")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("ar[.]")]),t._v(" => A garage is a good place to park a c"),_("strong",[t._v("ar.")])])]),t._v(" "),_("h3",{attrs:{id:"否定字符集"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#否定字符集"}},[t._v("#")]),t._v(" 否定字符集")]),t._v(" "),_("p",[t._v("以"),_("code",[t._v("^")]),t._v("开头的方括号，表示这个字符集是否定的。")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("[^c]ar")]),t._v(" => The car "),_("strong",[t._v("par")]),t._v("ked in the "),_("strong",[t._v("gar")]),t._v("age.")])]),t._v(" "),_("h3",{attrs:{id:"简写字符集"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简写字符集"}},[t._v("#")]),t._v(" 简写字符集")]),t._v(" "),_("p",[t._v("正则表达式提供一些常用的字符集简写。如下:")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("简写")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v(".")]),t._v(" "),_("td",[t._v("除换行符外的所有字符")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\w")]),t._v(" "),_("td",[t._v("匹配所有字母数字，等同于 "),_("code",[t._v("[a-zA-Z0-9\\_]")])])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\W")]),t._v(" "),_("td",[t._v("匹配所有非字母数字，即符号，等同于： "),_("code",[t._v("[^\\w]")])])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\d")]),t._v(" "),_("td",[t._v("匹配数字： "),_("code",[t._v("[0-9]")])])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\D")]),t._v(" "),_("td",[t._v("匹配非数字： "),_("code",[t._v("[^\\d]")])])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\s")]),t._v(" "),_("td",[t._v("匹配所有空格字符，等同于： "),_("code",[t._v("[\\t\\n\\f\\r\\p{Z}]")])])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\S")]),t._v(" "),_("td",[t._v("匹配所有非空格字符： "),_("code",[t._v("[^\\s]")])])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\f")]),t._v(" "),_("td",[t._v("匹配一个换页符")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\n")]),t._v(" "),_("td",[t._v("匹配一个换行符")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\r")]),t._v(" "),_("td",[t._v("匹配一个回车符")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\t")]),t._v(" "),_("td",[t._v("匹配一个制表符")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\v")]),t._v(" "),_("td",[t._v("匹配一个垂直制表符")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("\\p")]),t._v(" "),_("td",[t._v("匹配 CR/LF（等同于 "),_("code",[t._v("\\r\\n")]),t._v("），用来匹配 DOS 行终止符")])])])]),t._v(" "),_("h2",{attrs:{id:"重复匹配"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重复匹配"}},[t._v("#")]),t._v(" 重复匹配")]),t._v(" "),_("p",[t._v("后面跟着元字符 "),_("code",[t._v("+")]),t._v("，"),_("code",[t._v("*")]),t._v(" or "),_("code",[t._v("?")]),t._v(" 的，用来指定匹配子模式的次数。")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("[a-z]*")]),t._v(" => T"),_("strong",[t._v("he")]),t._v(" "),_("strong",[t._v("car")]),t._v(" "),_("strong",[t._v("parked")]),t._v(" "),_("strong",[t._v("in")]),t._v(" "),_("strong",[t._v("the")]),t._v(" "),_("strong",[t._v("garage")]),t._v(" #21.")])]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("c.+t")]),t._v(" => The fat "),_("strong",[t._v("cat sat on the mat")]),t._v(".")])]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("[T]?he")]),t._v(" => "),_("strong",[t._v("The")]),t._v(" car is parked in t"),_("strong",[t._v("he")]),t._v(" garage.")])]),t._v(" "),_("h3",{attrs:{id:"量词匹配"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#量词匹配"}},[t._v("#")]),t._v(" 量词匹配")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("{n}")]),t._v(" 匹配 n 个字符")]),t._v(" "),_("li",[_("strong",[t._v("{m,n}")]),t._v(" 匹配 m~n 个字符")]),t._v(" "),_("li",[_("strong",[t._v("{m,}")]),t._v(" 至少匹配 m 个字符")])]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("[0-9]{2,3}")]),t._v(" => The number was 9."),_("strong",[t._v("999")]),t._v("7 but we rounded it off to "),_("strong",[t._v("10")]),t._v(".0.")])]),t._v(" "),_("h2",{attrs:{id:"子表达式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#子表达式"}},[t._v("#")]),t._v(" 子表达式")]),t._v(" "),_("p",[t._v("使用 "),_("strong",[t._v("( )")]),t._v(" 定义一个子表达式。子表达式的内容可以当成一个整体，即可以将它看成一个字符。")]),t._v(" "),_("p",[_("strong",[t._v("|")]),t._v(" 是或元字符，它把左边和右边所有的部分都看成单独的两个部分，两个部分只要有一个匹配就行。")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("(c|g|p)ar")]),t._v(" => The "),_("strong",[t._v("car")]),t._v(" is "),_("strong",[t._v("par")]),t._v("ked in the "),_("strong",[t._v("gar")]),t._v("age.")])]),t._v(" "),_("h2",{attrs:{id:"位置匹配"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#位置匹配"}},[t._v("#")]),t._v(" 位置匹配")]),t._v(" "),_("p",[_("strong",[t._v("^")]),t._v(" 匹配整个字符串的开头，"),_("strong",[t._v("$")]),t._v(" 匹配结尾。从开头或从结尾开始匹配。")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("^(T|t)he")]),t._v(" => "),_("strong",[t._v("The")]),t._v(" car is parked in the garage.")])]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("(at\\.)$")]),t._v(" => The fat cat. sat. on the m"),_("strong",[t._v("at.")])])]),t._v(" "),_("h3",{attrs:{id:"单词边界"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单词边界"}},[t._v("#")]),t._v(" 单词边界")]),t._v(" "),_("p",[_("strong",[t._v("\\b")]),t._v(" 可以匹配一个单词的边界，边界是指位于 \\w 和 \\W 之间的位置；"),_("strong",[t._v("\\B")]),t._v(" 匹配一个不是单词边界的位置。")]),t._v(" "),_("p",[t._v("\\b 只匹配位置，不匹配字符，因此 \\babc\\b 匹配出来的结果为 3 个字符。")]),t._v(" "),_("h2",{attrs:{id:"前后预查"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前后预查"}},[t._v("#")]),t._v(" 前后预查")]),t._v(" "),_("p",[t._v("先行声明和后发声明都属于"),_("strong",[t._v("非捕获簇")]),t._v("（不捕获文本 ，也不针对组合计进行计数）。")]),t._v(" "),_("p",[t._v("零宽度声明有：")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("符号")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("?=")]),t._v(" "),_("td",[t._v("正先行声明-存在")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("?!")]),t._v(" "),_("td",[t._v("负先行声明-排除")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("?<=")]),t._v(" "),_("td",[t._v("正后发声明-存在")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("?<!")]),t._v(" "),_("td",[t._v("负后发声明-排除")])])])]),t._v(" "),_("p",[t._v("需定义在括号内。")]),t._v(" "),_("h3",{attrs:{id:"正先行声明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正先行声明"}},[t._v("#")]),t._v(" 正先行声明")]),t._v(" "),_("p",[_("code",[t._v("?=...")]),t._v(" 正先行声明，表示第一部分表达式之后必须跟着 "),_("code",[t._v("?=...")]),t._v("定义的表达式。返回结果只包含满足匹配条件的第一部分表达式。")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("(T|t)he(?=\\sfat)")]),t._v(" => "),_("strong",[t._v("The")]),t._v(" fat cat sat on the mat.")])]),t._v(" "),_("h3",{attrs:{id:"负先行声明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负先行声明"}},[t._v("#")]),t._v(" 负先行声明")]),t._v(" "),_("p",[t._v("负先行声明 "),_("code",[t._v("?!")]),t._v(" 用于筛选所有匹配结果，筛选条件为 其后不跟随着声明中定义的格式。")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("(T|t)he(?!\\sfat)")]),t._v(" => The fat cat sat on "),_("strong",[t._v("the")]),t._v(" mat.")])]),t._v(" "),_("h3",{attrs:{id:"正后发声明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正后发声明"}},[t._v("#")]),t._v(" 正后发声明")]),t._v(" "),_("p",[t._v("筛选其前跟随着声明中定义的格式。")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("(?<=(T|t)he\\s)(fat|mat)")]),t._v(" => The "),_("strong",[t._v("fat")]),t._v(" cat sat on the "),_("strong",[t._v("mat")]),t._v(".")])]),t._v(" "),_("h3",{attrs:{id:"负后发声明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#负后发声明"}},[t._v("#")]),t._v(" 负后发声明")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("(?&lt;!(T|t)he\\s)(cat)")]),t._v(" => The cat sat on "),_("strong",[t._v("cat")]),t._v(".")])]),t._v(" "),_("h1",{attrs:{id:"模式与标志"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模式与标志"}},[t._v("#")]),t._v(" 模式与标志")]),t._v(" "),_("h2",{attrs:{id:"贪婪匹配与惰性匹配"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#贪婪匹配与惰性匹配"}},[t._v("#")]),t._v(" 贪婪匹配与惰性匹配")]),t._v(" "),_("p",[t._v("正则表达式默认采用贪婪匹配模式，在该模式下意味着会匹配尽可能长的子串。我们可以使用 "),_("code",[t._v("?")]),t._v(" 将贪婪匹配模式转化为惰性匹配模式。")]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("(.*at)/")]),t._v(" => "),_("strong",[t._v("The fat cat sat on the mat")]),t._v(".")])]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("(.*?at)/")]),t._v(" => "),_("strong",[t._v("The fat")]),t._v(" cat sat on the mat.")])]),t._v(" "),_("h2",{attrs:{id:"标志"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#标志"}},[t._v("#")]),t._v(" 标志")]),t._v(" "),_("p",[t._v("模式修正符，附加的搜索条件。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("标志")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("i")]),t._v(" "),_("td",[t._v("忽略大小写。")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("g")]),t._v(" "),_("td",[t._v("全局搜索。")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("m")]),t._v(" "),_("td",[t._v("多行修饰符：锚点元字符 "),_("code",[t._v("^")]),t._v(" "),_("code",[t._v("$")]),t._v(" 工作范围在每行的起始。")])])])]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("/The/gi")]),t._v(" => "),_("strong",[t._v("The")]),t._v(" fat cat sat on "),_("strong",[t._v("the")]),t._v(" mat.")])]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("/.at(.)?$/")]),t._v(" => The fat \\n cat sat \\n on the "),_("strong",[t._v("mat.")])])]),t._v(" "),_("blockquote",[_("p",[_("code",[t._v("/.at(.)?$/gm")]),t._v(" => The "),_("strong",[t._v("fat")]),t._v(" \\n cat "),_("strong",[t._v("sat")]),t._v(" \\n on the "),_("strong",[t._v("mat.")])])]),t._v(" "),_("h1",{attrs:{id:"应用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用"}},[t._v("#")]),t._v(" 应用")]),t._v(" "),_("h2",{attrs:{id:"常见正则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#常见正则"}},[t._v("#")]),t._v(" 常见正则")]),t._v(" "),_("p",[_("strong",[t._v("手机号")]),t._v("："),_("code",[t._v("^1[34578]\\d{9}$")])]),t._v(" "),_("p",[_("strong",[t._v("邮箱")]),t._v("："),_("code",[t._v("^[\\w\\-]+@[\\w\\-]+\\.[\\w\\-]+$")])]),t._v(" "),_("h2",{attrs:{id:"其他"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),_("h3",{attrs:{id:"千位符"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#千位符"}},[t._v("#")]),t._v(" 千位符")]),t._v(" "),_("div",{staticClass:"language-js extra-class"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"7907899.00"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token regex"}},[_("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),_("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("(\\d)(?=(\\d{3})+\\b)")]),_("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),_("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("g")])]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v("'$1,'")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);v.default=a.exports}}]);