(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{1169:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"第8章-io库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第8章-io库"}},[t._v("#")]),t._v(" 第8章 IO库")]),t._v(" "),n("p",[t._v("部分IO库设施：")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("istream")]),t._v("：输入流类型，提供输入操作。")]),t._v(" "),n("li",[n("code",[t._v("ostream")]),t._v("：输出流类型，提供输出操作。")]),t._v(" "),n("li",[n("code",[t._v("cin")]),t._v("："),n("code",[t._v("istream")]),t._v("对象，从标准输入读取数据。")]),t._v(" "),n("li",[n("code",[t._v("cout")]),t._v("："),n("code",[t._v("ostream")]),t._v("对象，向标准输出写入数据。")]),t._v(" "),n("li",[n("code",[t._v("cerr")]),t._v("："),n("code",[t._v("ostream")]),t._v("对象，向标准错误写入数据。")]),t._v(" "),n("li",[n("code",[t._v(">>")]),t._v("运算符：从"),n("code",[t._v("istream")]),t._v("对象读取输入数据。")]),t._v(" "),n("li",[n("code",[t._v("<<")]),t._v("运算符：向"),n("code",[t._v("ostream")]),t._v("对象写入输出数据。")]),t._v(" "),n("li",[n("code",[t._v("getline")]),t._v("函数：从"),n("code",[t._v("istream")]),t._v("对象读取一行数据，写入"),n("code",[t._v("string")]),t._v("对象。")])]),t._v(" "),n("h2",{attrs:{id:"io类-the-io-classes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#io类-the-io-classes"}},[t._v("#")]),t._v(" IO类（The IO Classes）")]),t._v(" "),n("p",[t._v("头文件"),n("em",[t._v("iostream")]),t._v("定义了用于读写流的基本类型，"),n("em",[t._v("fstream")]),t._v("定义了读写命名文件的类型，"),n("em",[t._v("sstream")]),t._v("定义了读写内存中"),n("code",[t._v("string")]),t._v("对象的类型。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(737),alt:"8-1"}})]),t._v(" "),n("p",[t._v("宽字符版本的IO类型和函数的名字以"),n("code",[t._v("w")]),t._v("开始，如"),n("code",[t._v("wcin")]),t._v("、"),n("code",[t._v("wcout")]),t._v("和"),n("code",[t._v("wcerr")]),t._v("分别对应"),n("code",[t._v("cin")]),t._v("、"),n("code",[t._v("cout")]),t._v("和"),n("code",[t._v("cerr")]),t._v("。它们与其对应的普通"),n("code",[t._v("char")]),t._v("版本都定义在同一个头文件中，如头文件"),n("em",[t._v("fstream")]),t._v("定义了"),n("code",[t._v("ifstream")]),t._v("和"),n("code",[t._v("wifstream")]),t._v("类型。")]),t._v(" "),n("p",[t._v("可以将派生类的对象当作其基类的对象使用。")]),t._v(" "),n("h3",{attrs:{id:"io象无拷贝或赋值-no-copy-or-assign-for-io-objects"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#io象无拷贝或赋值-no-copy-or-assign-for-io-objects"}},[t._v("#")]),t._v(" IO象无拷贝或赋值（No Copy or Assign for IO Objects）")]),t._v(" "),n("p",[t._v("不能拷贝或对IO对象赋值。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("ofstream out1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" out2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nout1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" out2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: cannot assign stream objects")]),t._v("\nofstream "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ofstream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: can't initialize the ofstream parameter")]),t._v("\nout2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("out2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: cannot copy stream objects")]),t._v("\n")])])]),n("p",[t._v("由于IO对象不能拷贝，因此不能将函数形参或返回类型定义为流类型。进行IO操作的函数通常以引用方式传递和返回流。读写一个IO对象会改变其状态，因此传递和返回的引用不能是"),n("code",[t._v("const")]),t._v("的。")]),t._v(" "),n("h3",{attrs:{id:"条件状态-condition-states"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#条件状态-condition-states"}},[t._v("#")]),t._v(" 条件状态（Condition States）")]),t._v(" "),n("p",[t._v("IO库条件状态：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(738),alt:"8-2"}})]),t._v(" "),n("p",[n("code",[t._v("badbit")]),t._v("表示系统级错误，如不可恢复的读写错误。通常情况下，一旦"),n("code",[t._v("badbit")]),t._v("被置位，流就无法继续使用了。在发生可恢复错误后，"),n("code",[t._v("failbit")]),t._v("会被置位，如期望读取数值却读出一个字符。如果到达文件结束位置，"),n("code",[t._v("eofbit")]),t._v("和"),n("code",[t._v("failbit")]),t._v("都会被置位。如果流未发生错误，则"),n("code",[t._v("goodbit")]),t._v("的值为0。如果"),n("code",[t._v("badbit")]),t._v("、"),n("code",[t._v("failbit")]),t._v("和"),n("code",[t._v("eofbit")]),t._v("任何一个被置位，检测流状态的条件都会失败。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok: read operation successful...")]),t._v("\n")])])]),n("p",[n("code",[t._v("good")]),t._v("函数在所有错误均未置位时返回"),n("code",[t._v("true")]),t._v("。而"),n("code",[t._v("bad")]),t._v("、"),n("code",[t._v("fail")]),t._v("和"),n("code",[t._v("eof")]),t._v("函数在对应错误位被置位时返回"),n("code",[t._v("true")]),t._v("。此外，在"),n("code",[t._v("badbit")]),t._v("被置位时，"),n("code",[t._v("fail")]),t._v("函数也会返回"),n("code",[t._v("true")]),t._v("。因此应该使用"),n("code",[t._v("good")]),t._v("或"),n("code",[t._v("fail")]),t._v("函数确定流的总体状态，"),n("code",[t._v("eof")]),t._v("和"),n("code",[t._v("bad")]),t._v("只能检测特定错误。")]),t._v(" "),n("p",[t._v("流对象的"),n("code",[t._v("rdstate")]),t._v("成员返回一个"),n("code",[t._v("iostate")]),t._v("值，表示流的当前状态。"),n("code",[t._v("setstate")]),t._v("成员用于将指定条件置位（叠加原始流状态）。"),n("code",[t._v("clear")]),t._v("成员的无参版本清除所有错误标志；含参版本接受一个"),n("code",[t._v("iostate")]),t._v("值，用于设置流的新状态（覆盖原始流状态）。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// remember the current state of cin")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" old_state "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rdstate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// remember the current state of cin")]),t._v("\ncin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clear")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// make cin valid")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("process_input")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// use cin")]),t._v("\ncin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setstate")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("old_state"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// now reset cin to its old state")]),t._v("\n")])])]),n("h3",{attrs:{id:"管理输出缓冲-managing-the-output-buffer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#管理输出缓冲-managing-the-output-buffer"}},[t._v("#")]),t._v(" 管理输出缓冲（Managing the Output Buffer）")]),t._v(" "),n("p",[t._v("每个输出流都管理一个缓冲区，用于保存程序读写的数据。导致缓冲刷新（即数据真正写入输出设备或文件）的原因有很多：")]),t._v(" "),n("ul",[n("li",[t._v("程序正常结束。")]),t._v(" "),n("li",[t._v("缓冲区已满。")]),t._v(" "),n("li",[t._v("使用操纵符（如"),n("code",[t._v("endl")]),t._v("）显式刷新缓冲区。")]),t._v(" "),n("li",[t._v("在每个输出操作之后，可以用"),n("code",[t._v("unitbuf")]),t._v("操纵符设置流的内部状态，从而清空缓冲区。默认情况下，对"),n("code",[t._v("cerr")]),t._v("是设置"),n("code",[t._v("unitbuf")]),t._v("的，因此写到"),n("code",[t._v("cerr")]),t._v("的内容都是立即刷新的。")]),t._v(" "),n("li",[t._v("一个输出流可以被关联到另一个流。这种情况下，当读写被关联的流时，关联到的流的缓冲区会被刷新。默认情况下，"),n("code",[t._v("cin")]),t._v("和"),n("code",[t._v("cerr")]),t._v("都关联到"),n("code",[t._v("cout")]),t._v("，因此，读"),n("code",[t._v("cin")]),t._v("或写"),n("code",[t._v("cerr")]),t._v("都会刷新"),n("code",[t._v("cout")]),t._v("的缓冲区。")])]),t._v(" "),n("p",[n("code",[t._v("flush")]),t._v("操纵符刷新缓冲区，但不输出任何额外字符。"),n("code",[t._v("ends")]),t._v("向缓冲区插入一个空字符，然后刷新缓冲区。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi!"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// writes hi and a newline, then flushes the buffer")]),t._v("\ncout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi!"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" flush"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// writes hi, then flushes the buffer; adds no data")]),t._v("\ncout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hi!"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" ends"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// writes hi and a null, then flushes the buffer")]),t._v("\n")])])]),n("p",[t._v("如果想在每次输出操作后都刷新缓冲区，可以使用"),n("code",[t._v("unitbuf")]),t._v("操纵符。它令流在接下来的每次写操作后都进行一次"),n("code",[t._v("flush")]),t._v("操作。而"),n("code",[t._v("nounitbuf")]),t._v("操纵符则使流恢复使用正常的缓冲区刷新机制。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" unitbuf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// all writes will be flushed immediately")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// any output is flushed immediately, no buffering")]),t._v("\ncout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" nounitbuf"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns to normal buffering")]),t._v("\n")])])]),n("p",[n("mark",[t._v("如果程序异常终止，输出缓冲区不会被刷新。")])]),t._v(" "),n("p",[t._v("当一个输入流被关联到一个输出流时，任何试图从输入流读取数据的操作都会先刷新关联的输出流。标准库将"),n("code",[t._v("cout")]),t._v("和"),n("code",[t._v("cin")]),t._v("关联在一起，因此下面的语句会导致"),n("code",[t._v("cout")]),t._v("的缓冲区被刷新：")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("cin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" ival"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("交互式系统通常应该关联输入流和输出流。这意味着包括用户提示信息在内的所有输出，都会在读操作之前被打印出来。")]),t._v(" "),n("p",[t._v("使用"),n("code",[t._v("tie")]),t._v("函数可以"),n("mark",[t._v("关联两个流")]),t._v("。它有两个重载版本：无参版本返回指向输出流的指针。如果本对象已关联到一个输出流，则返回的就是指向这个流的指针，否则返回空指针。"),n("code",[t._v("tie")]),t._v("的第二个版本接受一个指向"),n("code",[t._v("ostream")]),t._v("的指针，将本对象关联到此"),n("code",[t._v("ostream")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("cin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tie")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("cout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// illustration only: the library ties cin and cout for us")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// old_tie points to the stream (if any) currently tied to cin")]),t._v("\nostream "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("old_tie "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tie")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nullptr")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cin is no longer tied")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ties cin and cerr; not a good idea because cin should be tied to cout")]),t._v("\ncin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tie")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("cerr"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// reading cin flushes cerr, not cout")]),t._v("\ncin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("tie")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("old_tie"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// reestablish normal tie between cin and cout")]),t._v("\n")])])]),n("p",[t._v("每个流同时最多关联一个流，但多个流可以同时关联同一个"),n("code",[t._v("ostream")]),t._v("。向"),n("code",[t._v("tie")]),t._v("传递空指针可以解开流的关联。")]),t._v(" "),n("h2",{attrs:{id:"文件输入输出-file-input-and-output"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文件输入输出-file-input-and-output"}},[t._v("#")]),t._v(" 文件输入输出（File Input and Output）")]),t._v(" "),n("p",[t._v("头文件"),n("em",[t._v("fstream")]),t._v("定义了三个类型来支持文件IO："),n("code",[t._v("ifstream")]),t._v("从给定文件读取数据，"),n("code",[t._v("ofstream")]),t._v("向指定文件写入数据，"),n("code",[t._v("fstream")]),t._v("可以同时读写指定文件。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(739),alt:"8-3"}})]),t._v(" "),n("h3",{attrs:{id:"使用文件流对象-using-file-stream-objects"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用文件流对象-using-file-stream-objects"}},[t._v("#")]),t._v(" 使用文件流对象（Using File Stream Objects）")]),t._v(" "),n("p",[t._v("每个文件流类型都定义了"),n("code",[t._v("open")]),t._v("函数，它完成一些系统操作，定位指定文件，并视情况打开为读或写模式。")]),t._v(" "),n("p",[t._v("创建文件流对象时，如果提供了文件名（可选），"),n("code",[t._v("open")]),t._v("会被自动调用。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("ifstream "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("in")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ifile"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// construct an ifstream and open the given file")]),t._v("\nofstream out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// output file stream that is not associated with any file")]),t._v("\n")])])]),n("p",[t._v("在C++11中，文件流对象的文件名可以是"),n("code",[t._v("string")]),t._v("对象或C风格字符数组。旧版本的标准库只支持C风格字符数组。")]),t._v(" "),n("p",[t._v("在要求使用基类对象的地方，可以用继承类型的对象代替。因此一个接受"),n("code",[t._v("iostream")]),t._v("类型引用或指针参数的函数，可以用对应的"),n("code",[t._v("fstream")]),t._v("类型来调用。")]),t._v(" "),n("p",[t._v("可以先定义空文件流对象，再调用"),n("code",[t._v("open")]),t._v("函数将其与指定文件关联。如果"),n("code",[t._v("open")]),t._v("调用失败，"),n("code",[t._v("failbit")]),t._v("会被置位。")]),t._v(" "),n("p",[t._v("对一个已经打开的文件流调用"),n("code",[t._v("open")]),t._v("会失败，并导致"),n("code",[t._v("failbit")]),t._v("被置位。随后试图使用文件流的操作都会失败。如果想将文件流关联到另一个文件，必须先调用"),n("code",[t._v("close")]),t._v("关闭当前文件，再调用"),n("code",[t._v("clear")]),t._v("重置流的条件状态（"),n("code",[t._v("close")]),t._v("不会重置流的条件状态）。")]),t._v(" "),n("p",[t._v("当"),n("code",[t._v("fstream")]),t._v("对象被销毁时，"),n("code",[t._v("close")]),t._v("会自动被调用。")]),t._v(" "),n("h3",{attrs:{id:"文件模式-file-modes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#文件模式-file-modes"}},[t._v("#")]),t._v(" 文件模式（File Modes）")]),t._v(" "),n("p",[t._v("每个流都有一个关联的文件模式，用来指出如何使用文件。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(740),alt:"8-4"}})]),t._v(" "),n("ul",[n("li",[t._v("只能对"),n("code",[t._v("ofstream")]),t._v("或"),n("code",[t._v("fstream")]),t._v("对象设定"),n("code",[t._v("out")]),t._v("模式。")]),t._v(" "),n("li",[t._v("只能对"),n("code",[t._v("ifstream")]),t._v("或"),n("code",[t._v("fstream")]),t._v("对象设定"),n("code",[t._v("in")]),t._v("模式。")]),t._v(" "),n("li",[t._v("只有当"),n("code",[t._v("out")]),t._v("被设定时才能设定"),n("code",[t._v("trunc")]),t._v("模式。")]),t._v(" "),n("li",[t._v("只要"),n("code",[t._v("trunc")]),t._v("没被设定，就能设定"),n("code",[t._v("app")]),t._v("模式。在"),n("code",[t._v("app")]),t._v("模式下，即使没有设定"),n("code",[t._v("out")]),t._v("模式，文件也是以输出方式打开。")]),t._v(" "),n("li",[t._v("默认情况下，即使没有设定"),n("code",[t._v("trunc")]),t._v("，以"),n("code",[t._v("out")]),t._v("模式打开的文件也会被截断。如果想保留以"),n("code",[t._v("out")]),t._v("模式打开的文件内容，就必须同时设定"),n("code",[t._v("app")]),t._v("模式，这会将数据追加写到文件末尾；或者同时设定"),n("code",[t._v("in")]),t._v("模式，即同时进行读写操作。")]),t._v(" "),n("li",[n("code",[t._v("ate")]),t._v("和"),n("code",[t._v("binary")]),t._v("模式可用于任何类型的文件流对象，并可以和其他任何模式组合使用。")]),t._v(" "),n("li",[t._v("与"),n("code",[t._v("ifstream")]),t._v("对象关联的文件默认以"),n("code",[t._v("in")]),t._v("模式打开，与"),n("code",[t._v("ofstream")]),t._v("对象关联的文件默认以"),n("code",[t._v("out")]),t._v("模式打开，与"),n("code",[t._v("fstream")]),t._v("对象关联的文件默认以"),n("code",[t._v("in")]),t._v("和"),n("code",[t._v("out")]),t._v("模式打开。")])]),t._v(" "),n("p",[t._v("默认情况下，打开"),n("code",[t._v("ofstream")]),t._v("对象时，文件内容会被丢弃，阻止文件清空的方法是同时指定"),n("code",[t._v("app")]),t._v("或"),n("code",[t._v("in")]),t._v("模式。")]),t._v(" "),n("p",[t._v("流对象每次打开文件时都可以改变其文件模式。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("ofstream out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// no file mode is set")]),t._v("\nout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scratchpad"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mode implicitly out and trunc")]),t._v("\nout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// close out so we can use it for a different file")]),t._v("\nout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"precious"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ofstream"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("app"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// mode is out and app")]),t._v("\nout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h2",{attrs:{id:"string流-string-streams"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#string流-string-streams"}},[t._v("#")]),t._v(" string流（string Streams）")]),t._v(" "),n("p",[t._v("头文件"),n("em",[t._v("sstream")]),t._v("定义了三个类型来支持内存IO："),n("code",[t._v("istringstream")]),t._v("从"),n("code",[t._v("string")]),t._v("读取数据，"),n("code",[t._v("ostringstream")]),t._v("向"),n("code",[t._v("string")]),t._v("写入数据，"),n("code",[t._v("stringstream")]),t._v("可以同时读写"),n("code",[t._v("string")]),t._v("的数据。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(741),alt:"8-5"}})]),t._v(" "),n("h3",{attrs:{id:"使用istringstream-using-an-istringstream"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用istringstream-using-an-istringstream"}},[t._v("#")]),t._v(" 使用istringstream（Using an istringstream）")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// members are public by default")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PersonInfo")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    string name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    vector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" phones"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nstring line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// will hold a line and word from input, respectively")]),t._v("\nvector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("PersonInfo"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// will hold all the records from the input")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// read the input a line at a time until cin hits end-of-file (or another error)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getline")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    PersonInfo info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// create an object to hold this record's data")]),t._v("\n    istringstream "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("record")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// bind record to the line we just read")]),t._v("\n    record "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// read the name")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("record "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// read the phone numbers")]),t._v("\n        info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phones"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push_back")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and store them")]),t._v("\n    people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push_back")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("info"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// append this record to people")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"使用ostringstream-using-ostringstreams"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用ostringstream-using-ostringstreams"}},[t._v("#")]),t._v(" 使用ostringstream（Using ostringstreams）")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("entry "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" people"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for each entry in people")]),t._v("\n    ostringstream formatted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" badNums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// objects created on each loop")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("nums "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("phones"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for each number")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("valid")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            badNums "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// string in badNums")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ''writes'' to formatted's string")]),t._v("\n            formatted "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("badNums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// there were no bad numbers")]),t._v("\n        os "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print the name")]),t._v("\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" formatted"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// and reformatted numbers")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// otherwise, print the name and bad numbers")]),t._v("\n        cerr "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"input error: "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" entry"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name\n            "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" invalid number(s) "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" badNums"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("str")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports},737:function(t,s,a){t.exports=a.p+"assets/img/8-1.d9a7e4d7.png"},738:function(t,s,a){t.exports=a.p+"assets/img/8-2.b9ca27fd.png"},739:function(t,s){t.exports="data:image/png;base64,"},740:function(t,s,a){t.exports=a.p+"assets/img/8-4.ffa93066.png"},741:function(t,s,a){t.exports=a.p+"assets/img/8-5.13a44fc3.png"}}]);