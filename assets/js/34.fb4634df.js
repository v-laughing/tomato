(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{1205:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("关联容器支持高效的关键字查找和访问操作。")]),t._v(" "),n("ul",[n("li",[n("code",[t._v("map")]),t._v("中的元素是一些键值对（key-value）：关键字起索引作用，值表示与索引相关联的数据。")]),t._v(" "),n("li",[n("code",[t._v("set")]),t._v("中每个元素只包含一个关键字，支持高效的关键字查询操作：检查一个给定关键字是否在"),n("code",[t._v("set")]),t._v("中。")])]),t._v(" "),n("p",[t._v("标准库提供了8个关联容器，它们之间的不同体现在三个方面：")]),t._v(" "),n("ul",[n("li",[t._v("是"),n("code",[t._v("map")]),t._v("还是"),n("code",[t._v("set")]),t._v("类型。")]),t._v(" "),n("li",[t._v("是否允许保存重复的关键字。")]),t._v(" "),n("li",[t._v("是否按顺序保存元素。")])]),t._v(" "),n("p",[t._v("允许重复保存关键字的容器名字都包含单词"),n("code",[t._v("multi")]),t._v("；无序保存元素的容器名字都以单词"),n("code",[t._v("unordered")]),t._v("开头。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(745),alt:"11-1"}})]),t._v(" "),n("p",[n("code",[t._v("map")]),t._v("和"),n("code",[t._v("multimap")]),t._v("类型定义在头文件"),n("code",[t._v("map")]),t._v("中；"),n("code",[t._v("set")]),t._v("和"),n("code",[t._v("multiset")]),t._v("类型定义在头文件"),n("code",[t._v("set")]),t._v("中；无序容器定义在头文件"),n("code",[t._v("unordered_map")]),t._v("和"),n("code",[t._v("unordered_set")]),t._v("中。")]),t._v(" "),n("h2",{attrs:{id:"使用关联容器-using-an-associative-container"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用关联容器-using-an-associative-container"}},[t._v("#")]),t._v(" 使用关联容器（Using an Associative Container）")]),t._v(" "),n("p",[n("code",[t._v("map")]),t._v("类型通常被称为关联数组（associative array）。")]),t._v(" "),n("p",[n("code",[t._v("map")]),t._v("的元素为"),n("code",[t._v("pair")]),t._v("类型。"),n("code",[t._v("pair")]),t._v("是一个模板类型，保存两个名为"),n("code",[t._v("first")]),t._v("和"),n("code",[t._v("second")]),t._v("的公有数据成员。"),n("code",[t._v("map")]),t._v("所使用的"),n("code",[t._v("pair")]),t._v("用"),n("code",[t._v("first")]),t._v("成员保存关键字，用"),n("code",[t._v("second")]),t._v("成员保存对应的值。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// count the number of times each word occurs in the input")]),t._v("\nmap"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" word_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// empty map from string to size_t")]),t._v("\nstring word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("word_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fetch and increment the counter for word")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("w "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" word_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// for each element in the map")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print the results")]),t._v("\n    cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" occurs "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("second\n        "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("w"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("second "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" times"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" time"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v("set")]),t._v("类型的"),n("code",[t._v("find")]),t._v("成员返回一个迭代器。如果给定关键字在"),n("code",[t._v("set")]),t._v("中，则迭代器指向该关键字，否则返回的是尾后迭代器。")]),t._v(" "),n("h2",{attrs:{id:"关联容器概述-overview-of-the-associative-containers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关联容器概述-overview-of-the-associative-containers"}},[t._v("#")]),t._v(" 关联容器概述（Overview of the Associative Containers）")]),t._v(" "),n("h3",{attrs:{id:"定义关联容器-defining-an-associative-container"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#定义关联容器-defining-an-associative-container"}},[t._v("#")]),t._v(" 定义关联容器（Defining an Associative Container）")]),t._v(" "),n("p",[t._v("初始化"),n("code",[t._v("map")]),t._v("时，提供的每个键值对用花括号"),n("code",[t._v("{}")]),t._v("包围。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("map"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" word_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// empty")]),t._v("\nset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" exclude "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"but"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"and"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nmap"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" authors "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Joyce"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"James"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Austen"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Jane"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Dickens"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Charles"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v("map")]),t._v("和"),n("code",[t._v("set")]),t._v("中的关键字必须唯一，"),n("code",[t._v("multimap")]),t._v("和"),n("code",[t._v("multiset")]),t._v("没有此限制。")]),t._v(" "),n("h3",{attrs:{id:"关键字类型的要求-requirements-on-key-type"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关键字类型的要求-requirements-on-key-type"}},[t._v("#")]),t._v(" 关键字类型的要求（Requirements on Key Type）")]),t._v(" "),n("p",[t._v("对于有序容器——"),n("code",[t._v("map")]),t._v("、"),n("code",[t._v("multimap")]),t._v("、"),n("code",[t._v("set")]),t._v("和"),n("code",[t._v("multiset")]),t._v("，关键字类型必须定义元素比较的方法。默认情况下，标准库使用关键字类型的"),n("code",[t._v("<")]),t._v("运算符来进行比较操作。")]),t._v(" "),n("p",[t._v("用来组织容器元素的操作的类型也是该容器类型的一部分。如果需要使用自定义的比较操作，则必须在定义关联容器类型时提供此操作的类型。操作类型在尖括号中紧跟着元素类型给出。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("bool")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("compareIsbn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Sales_data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("lhs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" Sales_data "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("rhs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" lhs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isbn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" rhs"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("isbn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// elements in bookstore will be in ISBN order")]),t._v("\nmultiset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Sales_data"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("decltype")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("compareIsbn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("bookstore")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("compareIsbn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("h3",{attrs:{id:"pair类型-the-pair-type"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#pair类型-the-pair-type"}},[t._v("#")]),t._v(" pair类型（The pair Type）")]),t._v(" "),n("p",[n("code",[t._v("pair")]),t._v("定义在头文件"),n("code",[t._v("utility")]),t._v("中。一个"),n("code",[t._v("pair")]),t._v("可以保存两个数据成员，分别命名为"),n("code",[t._v("first")]),t._v("和"),n("code",[t._v("second")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("pair"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" anon"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// holds two strings")]),t._v("\npair"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" word_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// holds a string and an size_t")]),t._v("\npair"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" line"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// holds string and vector<int>")]),t._v("\n")])])]),n("p",[n("code",[t._v("pair")]),t._v("的默认构造函数对数据成员进行值初始化。")]),t._v(" "),n("p",[n("code",[t._v("pair")]),t._v("支持的操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(746),alt:"11-2"}})]),t._v(" "),n("p",[t._v("在cpp11中，如果函数需要返回"),n("code",[t._v("pair")]),t._v("，可以对返回值进行列表初始化。早期cpp版本中必须显式构造返回值。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("pair"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("process")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("vector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// process v")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// list initialize")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// explicitly constructed return value")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" pair"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"关联容器操作-operations-on-associative-containers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关联容器操作-operations-on-associative-containers"}},[t._v("#")]),t._v(" 关联容器操作（Operations on Associative Containers）")]),t._v(" "),n("p",[t._v("关联容器定义了类型别名来表示容器关键字和值的类型：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(747),alt:"11-3"}})]),t._v(" "),n("p",[t._v("对于"),n("code",[t._v("set")]),t._v("类型，"),n("code",[t._v("key_type")]),t._v("和"),n("code",[t._v("value_type")]),t._v("是一样的。"),n("code",[t._v("pair")]),t._v("的关键字部分是"),n("code",[t._v("const")]),t._v("的。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("set"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("value_type v1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v1 is a string")]),t._v("\nset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("key_type v2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v2 is a string")]),t._v("\nmap"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("value_type v3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v3 is a pair<const string, int>")]),t._v("\nmap"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("key_type v4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v4 is a string")]),t._v("\nmap"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("mapped_type v5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// v5 is an int")]),t._v("\n")])])]),n("h3",{attrs:{id:"关联容器迭代器-associative-container-iterators"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关联容器迭代器-associative-container-iterators"}},[t._v("#")]),t._v(" 关联容器迭代器（Associative Container Iterators）")]),t._v(" "),n("p",[t._v("解引用关联容器迭代器时，会得到一个类型为容器的"),n("code",[t._v("value_type")]),t._v("的引用。对"),n("code",[t._v("map")]),t._v("而言，"),n("code",[t._v("value_type")]),t._v("是"),n("code",[t._v("pair")]),t._v("类型，其"),n("code",[t._v("first")]),t._v("成员保存"),n("code",[t._v("const")]),t._v("的关键字，"),n("code",[t._v("second")]),t._v("成员保存值。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" map_it "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" word_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" map_it"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prints the key for this element")]),t._v("\ncout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" map_it"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// prints the value of the element")]),t._v("\nmap_it"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new key"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: key is const")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("map_it"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("               "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok: we can change the value through an iterator")]),t._v("\n")])])]),n("p",[t._v("虽然"),n("code",[t._v("set")]),t._v("同时定义了"),n("code",[t._v("iterator")]),t._v("和"),n("code",[t._v("const_iterator")]),t._v("类型，但两种迭代器都只允许只读访问"),n("code",[t._v("set")]),t._v("中的元素。类似"),n("code",[t._v("map")]),t._v("，"),n("code",[t._v("set")]),t._v("中的关键字也是"),n("code",[t._v("const")]),t._v("的。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("set"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" iset "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nset"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("iterator set_it "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" iset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set_it "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" iset"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("set_it "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: keys in a set are read-only")]),t._v("\n    cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("set_it "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok: can read the key")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("code",[t._v("map")]),t._v("和"),n("code",[t._v("set")]),t._v("都支持"),n("code",[t._v("begin")]),t._v("和"),n("code",[t._v("end")]),t._v("操作。使用迭代器遍历"),n("code",[t._v("map")]),t._v("、"),n("code",[t._v("multimap")]),t._v("、"),n("code",[t._v("set")]),t._v("或"),n("code",[t._v("multiset")]),t._v("时，迭代器按关键字升序遍历元素。")]),t._v(" "),n("blockquote",[n("p",[t._v("通常不对关联容器使用泛型算法。")])]),t._v(" "),n("h3",{attrs:{id:"添加元素-adding-elements"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#添加元素-adding-elements"}},[t._v("#")]),t._v(" 添加元素（Adding Elements）")]),t._v(" "),n("p",[t._v("使用"),n("code",[t._v("insert")]),t._v("成员可以向关联容器中添加元素。向"),n("code",[t._v("map")]),t._v("和"),n("code",[t._v("set")]),t._v("中添加已存在的元素对容器没有影响。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// four ways to add word to word_count")]),t._v("\nword_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nword_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make_pair")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nword_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pair"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nword_count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("map")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size_t"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("value_type")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("关联容器的"),n("code",[t._v("insert")]),t._v("操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(748),alt:"11-4"}})]),t._v(" "),n("p",[n("code",[t._v("insert")]),t._v("或"),n("code",[t._v("emplace")]),t._v("的返回值依赖于容器类型和参数：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("对于不包含重复关键字的容器，添加单一元素的"),n("code",[t._v("insert")]),t._v("和"),n("code",[t._v("emplace")]),t._v("版本返回一个"),n("code",[t._v("pair")]),t._v("，表示操作是否成功。"),n("code",[t._v("pair")]),t._v("的"),n("code",[t._v("first")]),t._v("成员是一个迭代器，指向具有给定关键字的元素；"),n("code",[t._v("second")]),t._v("成员是一个"),n("code",[t._v("bool")]),t._v("值，表明是否插入了值。")])]),t._v(" "),n("li",[n("p",[t._v("对于允许包含重复关键字的容器，添加单一元素的"),n("code",[t._v("insert")]),t._v("和"),n("code",[t._v("emplace")]),t._v("版本返回指向新元素的迭代器。")])])]),t._v(" "),n("h3",{attrs:{id:"删除元素-erasing-elements"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除元素-erasing-elements"}},[t._v("#")]),t._v(" 删除元素（Erasing Elements）")]),t._v(" "),n("p",[t._v("关联容器的删除操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(749),alt:"11-5"}})]),t._v(" "),n("p",[n("code",[t._v("erase")]),t._v("操作，接受一个"),n("code",[t._v("key_type")]),t._v("参数，删除所有匹配关键字的元素，返回实际删除的元素数量。")]),t._v(" "),n("h3",{attrs:{id:"map的下标操作-subscripting-a-map"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#map的下标操作-subscripting-a-map"}},[t._v("#")]),t._v(" map的下标操作（Subscripting a map）")]),t._v(" "),n("p",[n("code",[t._v("map")]),t._v("下标运算符接受一个关键字，获取与此关键字相关联的值。如果关键字不在容器中，下标运算符会向容器中添加该关键字，并值初始化关联值。")]),t._v(" "),n("p",[t._v("由于下标运算符可能向容器中添加元素，所以只能对非"),n("code",[t._v("const")]),t._v("的"),n("code",[t._v("map")]),t._v("使用下标操作。")]),t._v(" "),n("p",[n("code",[t._v("map")]),t._v("和"),n("code",[t._v("unordered_map")]),t._v("的下标操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(750),alt:"11-6"}})]),t._v(" "),n("p",[t._v("对"),n("code",[t._v("map")]),t._v("进行下标操作时，返回的是"),n("code",[t._v("mapped_type")]),t._v("类型的对象；解引用"),n("code",[t._v("map")]),t._v("迭代器时，返回的是"),n("code",[t._v("value_type")]),t._v("类型的对象。")]),t._v(" "),n("h3",{attrs:{id:"访问元素-accessing-elements"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#访问元素-accessing-elements"}},[t._v("#")]),t._v(" 访问元素（Accessing Elements）")]),t._v(" "),n("p",[t._v("关联容器的查找操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(751),alt:"11-7"}})]),t._v(" "),n("p",[t._v("如果"),n("code",[t._v("multimap")]),t._v("或"),n("code",[t._v("multiset")]),t._v("中有多个元素具有相同关键字，则这些元素在容器中会"),n("mark",[t._v("相邻存储")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("multimap"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" authors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nauthors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Barth, John"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sot-Weed Factor"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nauthors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Barth, John"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Lost in the Funhouse"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nstring "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("search_item")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Alain de Botton"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// author we'll look for")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" entries "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" authors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("count")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("search_item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// number of elements")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" iter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" authors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("find")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("search_item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// first entry for this author")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// loop through the number of entries there are for this author")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("entries"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" iter"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("second "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print each title")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("iter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// advance to the next title")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("entries"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// keep track of how many we've printed")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[n("code",[t._v("lower_bound")]),t._v("和"),n("code",[t._v("upper_bound")]),t._v("操作都接受一个关键字，返回一个迭代器。如果关键字在容器中，"),n("code",[t._v("lower_bound")]),t._v("返回的迭代器会指向第一个匹配给定关键字的元素，而"),n("code",[t._v("upper_bound")]),t._v("返回的迭代器则指向最后一个匹配元素之后的位置。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// beg and end denote the range of elements for this author")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" beg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" authors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("lower_bound")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("search_item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        end "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" authors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("upper_bound")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("search_item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    beg "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" end"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("beg"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" beg"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("second "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print each title")]),t._v("\n")])])]),n("p",[n("code",[t._v("lower_bound")]),t._v("和"),n("code",[t._v("upper_bound")]),t._v("有可能返回尾后迭代器。如果查找的元素具有容器中最大的关键字，则"),n("code",[t._v("upper_bound")]),t._v("返回尾后迭代器。如果关键字不存在，且大于容器中任何关键字，则"),n("code",[t._v("lower_bound")]),t._v("也返回尾后迭代器。")]),t._v(" "),n("p",[n("code",[t._v("equal_range")]),t._v("操作接受一个关键字，返回一个迭代器"),n("code",[t._v("pair")]),t._v("。若关键字存在，则第一个迭代器指向第一个匹配关键字的元素，第二个迭代器指向最后一个匹配元素之后的位置。若关键字不存在，则两个迭代器都指向一个不影响排序的关键字插入位置。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// pos holds iterators that denote the range of elements for this key")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" pos "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" authors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("equal_range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("search_item"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    cout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" pos"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("first"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v("second "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" endl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// print each title")]),t._v("\n")])])]),n("h2",{attrs:{id:"无序容器-the-unordered-containers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#无序容器-the-unordered-containers"}},[t._v("#")]),t._v(" 无序容器（The Unordered Containers）")]),t._v(" "),n("p",[t._v("新标准库定义了4个无序关联容器（unordered associative container），这些容器使用哈希函数（hash function）和关键字类型的"),n("code",[t._v("==")]),t._v("运算符组织元素。")]),t._v(" "),n("p",[t._v("无序容器和对应的有序容器通常可以相互替换。但是由于元素未按顺序存储，使用无序容器的程序输出一般会与有序容器的版本不同。")]),t._v(" "),n("p",[t._v("无序容器在存储上组织为一组桶，每个桶保存零或多个元素。无序容器使用一个哈希函数将元素映射到桶。为了访问一个元素，容器首先计算元素的哈希值，它指出应该搜索哪个桶。容器将具有一个特定哈希值的所有元素都保存在相同的桶中。因此无序容器的性能依赖于哈希函数的质量和桶的数量及大小。")]),t._v(" "),n("p",[t._v("无序容器管理操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(752),alt:"11-8"}})]),t._v(" "),n("p",[t._v("默认情况下，无序容器使用关键字类型的"),n("code",[t._v("==")]),t._v("运算符比较元素，还使用一个"),n("code",[t._v("hash<key_type>")]),t._v("类型的对象来生成每个元素的哈希值。标准库为内置类型和一些标准库类型提供了hash模板。因此可以直接定义关键字是这些类型的无序容器，而不能直接定义关键字类型为自定义类类型的无序容器，必须先提供对应的hash模板版本。")])])}),[],!1,null,null,null);s.default=e.exports},745:function(t,s,a){t.exports=a.p+"assets/img/11-1.034d4aa8.png"},746:function(t,s,a){t.exports=a.p+"assets/img/11-2.217f5403.png"},747:function(t,s,a){t.exports=a.p+"assets/img/11-3.da3a962a.png"},748:function(t,s,a){t.exports=a.p+"assets/img/11-4.58108010.png"},749:function(t,s,a){t.exports=a.p+"assets/img/11-5.d77d7078.png"},750:function(t,s,a){t.exports=a.p+"assets/img/11-6.457453be.png"},751:function(t,s,a){t.exports=a.p+"assets/img/11-7.0120b253.png"},752:function(t,s,a){t.exports=a.p+"assets/img/11-8.947628e0.png"}}]);