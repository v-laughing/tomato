(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{1191:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"顺序容器概述-overview-of-the-sequential-containers"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#顺序容器概述-overview-of-the-sequential-containers"}},[t._v("#")]),t._v(" 顺序容器概述（Overview of the Sequential Containers）")]),t._v(" "),n("p",[t._v("顺序容器类型：")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("类型")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("特性")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("code",[t._v("vector")])]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("可变大小数组。支持快速随机访问。在尾部之外的位置插入/删除元素可能很慢")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("code",[t._v("deque")])]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("双端队列。支持快速随机访问。在头尾位置插入/删除速度很快")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("code",[t._v("list")])]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("双向链表。只支持双向顺序访问。在任何位置插入/删除速度都很快")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("code",[t._v("forward_list")])]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("单向链表。只支持单向顺序访问。在任何位置插入/删除速度都很快")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("code",[t._v("array")])]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("固定大小数组。支持快速随机访问。不能添加/删除元素")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[n("code",[t._v("string")])]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("类似"),n("code",[t._v("vector")]),t._v("，但用于保存字符。支持快速随机访问。在尾部插入/删除速度很快")])])])]),t._v(" "),n("p",[n("code",[t._v("forward_list")]),t._v("和"),n("code",[t._v("array")]),t._v("是cpp11新增类型。与内置数组相比，"),n("code",[t._v("array")]),t._v("更安全易用。"),n("code",[t._v("forward_list")]),t._v("没有"),n("code",[t._v("size")]),t._v("操作。")]),t._v(" "),n("p",[t._v("容器选择原则：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("除非有合适的理由选择其他容器，否则应该使用"),n("code",[t._v("vector")]),t._v("。")])]),t._v(" "),n("li",[n("p",[t._v("如果程序有很多小的元素，且空间的额外开销很重要，则不要使用"),n("code",[t._v("list")]),t._v("或"),n("code",[t._v("forward_list")]),t._v("。")])]),t._v(" "),n("li",[n("p",[t._v("如果程序要求随机访问容器元素，则应该使用"),n("code",[t._v("vector")]),t._v("或"),n("code",[t._v("deque")]),t._v("。")])]),t._v(" "),n("li",[n("p",[t._v("如果程序需要在容器头尾位置插入/删除元素，但不会在中间位置操作，则应该使用"),n("code",[t._v("deque")]),t._v("。")])]),t._v(" "),n("li",[n("p",[t._v("如果程序只有在读取输入时才需要在容器中间位置插入元素，之后需要随机访问元素。则：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("先确定是否真的需要在容器中间位置插入元素。当处理输入数据时，可以先向"),n("code",[t._v("vector")]),t._v("追加数据，再调用标准库的"),n("code",[t._v("sort")]),t._v("函数重排元素，从而避免在中间位置添加元素。")])]),t._v(" "),n("li",[n("p",[t._v("如果必须在中间位置插入元素，可以在输入阶段使用"),n("code",[t._v("list")]),t._v("。输入完成后将"),n("code",[t._v("list")]),t._v("中的内容拷贝到"),n("code",[t._v("vector")]),t._v("中。")])])])]),t._v(" "),n("li",[n("p",[t._v("不确定应该使用哪种容器时，可以先只使用"),n("code",[t._v("vector")]),t._v("和"),n("code",[t._v("list")]),t._v("的公共操作：使用迭代器，不使用下标操作，避免随机访问。这样在必要时选择"),n("code",[t._v("vector")]),t._v("或"),n("code",[t._v("list")]),t._v("都很方便。")])])]),t._v(" "),n("h2",{attrs:{id:"容器库概览-container-library-overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器库概览-container-library-overview"}},[t._v("#")]),t._v(" 容器库概览（Container Library Overview）")]),t._v(" "),n("p",[t._v("每个容器都定义在一个头文件中，文件名与类型名相同。容器均为"),n("mark",[t._v("模板类型")]),t._v("。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(771),alt:"9-2"}})]),t._v(" "),n("h3",{attrs:{id:"迭代器-iterators"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#迭代器-iterators"}},[t._v("#")]),t._v(" 迭代器（Iterators）")]),t._v(" "),n("p",[n("code",[t._v("forward_list")]),t._v("类型不支持递减运算符"),n("code",[t._v("--")]),t._v("。")]),t._v(" "),n("p",[t._v("一个迭代器范围为"),n("code",[t._v("[begin，end）")]),t._v("。迭代器"),n("code",[t._v("begin")]),t._v("和"),n("code",[t._v("end")]),t._v("必须指向相同的容器。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("begin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" end"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("begin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" val"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok: range isn't empty so begin denotes an element")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("begin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// advance the iterator to get the next element")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"容器类型成员-container-type-members"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器类型成员-container-type-members"}},[t._v("#")]),t._v(" 容器类型成员（Container Type Members）")]),t._v(" "),n("p",[t._v("通过类型别名，可以在不了解容器元素类型的情况下使用元素。如果需要元素类型，可以使用容器的"),n("code",[t._v("value_type")]),t._v("。如果需要元素类型的引用，可以使用"),n("code",[t._v("reference")]),t._v("或"),n("code",[t._v("const_reference")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"begin和end成员-begin-and-end-members"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#begin和end成员-begin-and-end-members"}},[t._v("#")]),t._v(" begin和end成员（begin and end Members）")]),t._v(" "),n("p",[n("code",[t._v("begin")]),t._v("和"),n("code",[t._v("end")]),t._v("操作有多个版本：带"),n("code",[t._v("r")]),t._v("的版本返回反向迭代器。以"),n("code",[t._v("c")]),t._v("开头的版本（cpp11新增）返回"),n("code",[t._v("const")]),t._v("迭代器。")]),t._v(" "),n("p",[t._v("不以"),n("code",[t._v("c")]),t._v("开头的版本都是重载的，当对非常量对象调用这些成员时，返回普通迭代器，对"),n("code",[t._v("const")]),t._v("对象调用时，返回"),n("code",[t._v("const")]),t._v("迭代器。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("list"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Milton"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shakespeare"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Austen"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" it1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// list<string>::iterator")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" it2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("rbegin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// list<string>::reverse_iterator")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" it3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cbegin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// list<string>::const_iterator")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" it4 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("crbegin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// list<string>::const_reverse_iterator")]),t._v("\n")])])]),n("p",[t._v("当"),n("code",[t._v("auto")]),t._v("与"),n("code",[t._v("begin")]),t._v("或"),n("code",[t._v("end")]),t._v("结合使用时，返回的迭代器类型依赖于容器类型。但调用以"),n("code",[t._v("c")]),t._v("开头的版本仍然可以获得"),n("code",[t._v("const")]),t._v("迭代器，与容器是否是常量无关。")]),t._v(" "),n("p",[t._v("当程序不需要写操作时，应该使用"),n("code",[t._v("cbegin")]),t._v("和"),n("code",[t._v("cend")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"容器定义和初始化-defining-and-initializing-a-container"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器定义和初始化-defining-and-initializing-a-container"}},[t._v("#")]),t._v(" 容器定义和初始化（Defining and Initializing a Container）")]),t._v(" "),n("p",[t._v("容器定义和初始化方式：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(772),alt:"9-3"}})]),t._v(" "),n("p",[t._v("将一个容器初始化为另一个容器的拷贝时，两个容器的容器类型和元素类型都必须相同。")]),t._v(" "),n("p",[t._v("传递迭代器参数来拷贝一个范围时，不要求容器类型相同，而且新容器和原容器中的元素类型也可以不同，但是要能进行类型转换。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// each container has three elements, initialized from the given initializers")]),t._v("\nlist"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" authors "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Milton"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shakespeare"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Austen"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" articles "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"an"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlist"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("list2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("authors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok: types match")]),t._v("\ndeque"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("authList")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("authors"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: container types don't match")]),t._v("\nvector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("words")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("articles"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: element types must match")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok: converts const char* elements to string")]),t._v("\nforward_list"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("words")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("articles"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" articles"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("cpp11允许对容器进行列表初始化。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("list"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" authors "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Milton"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Shakespeare"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Austen"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" articles "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"an"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"the"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("定义和使用"),n("code",[t._v("array")]),t._v("类型时，需要同时指定元素类型和容器大小。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("array"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type is: array that holds 42 ints")]),t._v("\narray"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// type is: array that holds 10 strings")]),t._v("\narray"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("size_type i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// array type includes element type and size")]),t._v("\narray"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),t._v("size_type j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: array<int> is not a type")]),t._v("\n")])])]),n("p",[t._v("对"),n("code",[t._v("array")]),t._v("进行列表初始化时，初始值的数量不能大于"),n("code",[t._v("array")]),t._v("的大小。如果初始值的数量小于"),n("code",[t._v("array")]),t._v("的大小，则只初始化靠前的元素，剩余元素会被值初始化。如果元素类型是类类型，则该类需要一个默认构造函数。")]),t._v(" "),n("p",[t._v("可以对"),n("code",[t._v("array")]),t._v("进行"),n("mark",[t._v("拷贝或赋值操作")]),t._v("，但要求二者的元素类型和大小都相同。")]),t._v(" "),n("h3",{attrs:{id:"赋值和swap-assignment-and-swap"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#赋值和swap-assignment-and-swap"}},[t._v("#")]),t._v(" 赋值和swap（Assignment and swap）")]),t._v(" "),n("p",[t._v("容器赋值操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(773),alt:"9-4"}})]),t._v(" "),n("p",[t._v("赋值运算符两侧的运算对象必须类型相同。"),n("code",[t._v("assign")]),t._v("允许用不同但相容的类型赋值，或者用容器的子序列赋值。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("list"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" names"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" oldstyle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nnames "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" oldstyle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: container types don't match")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ok: can convert from const char*to string")]),t._v("\nnames"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("oldstyle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cbegin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" oldstyle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("由于其旧元素被替换，因此传递给"),n("code",[t._v("assign")]),t._v("的迭代器不能指向调用"),n("code",[t._v("assign")]),t._v("的容器本身。")]),t._v(" "),n("p",[n("code",[t._v("swap")]),t._v("交换两个相同类型容器的内容。除"),n("code",[t._v("array")]),t._v("外，"),n("code",[t._v("swap")]),t._v("不对任何元素进行拷贝、删除或插入操作，只交换两个容器的内部数据结构，因此可以保证快速完成。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("vector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("svec1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vector with ten elements")]),t._v("\nvector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("svec2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vector with 24 elements")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("swap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("svec1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" svec2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("赋值相关运算会导致指向左边容器内部的迭代器、引用和指针失效。而"),n("code",[t._v("swap")]),t._v("操作交换容器内容，不会导致迭代器、引用和指针失效（"),n("code",[t._v("array")]),t._v("和"),n("code",[t._v("string")]),t._v("除外）。")]),t._v(" "),n("p",[t._v("对于"),n("code",[t._v("array")]),t._v("，"),n("code",[t._v("swap")]),t._v("会真正交换它们的元素。因此在"),n("code",[t._v("swap")]),t._v("操作后，指针、引用和迭代器所绑定的元素不变，但"),n("mark",[t._v("元素值已经被交换")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("array"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narray"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cbegin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("swap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// p -> q: 4、5、6")]),t._v("\n")])])]),n("p",[t._v("对于其他容器类型（除"),n("code",[t._v("string")]),t._v("），指针、引用和迭代器在"),n("code",[t._v("swap")]),t._v("操作后仍指向操作前的元素，但这些元素已经属于不同的容器了。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("vector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" b "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cbegin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1 , 2, 3")]),t._v("\na"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("swap")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" p1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cbegin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" q1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("cend")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4 , 5, 6")]),t._v("\n")])])]),n("p",[n("code",[t._v("array")]),t._v("不支持"),n("code",[t._v("assign")]),t._v("，也不允许用花括号列表进行"),n("mark",[t._v("赋值")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("array"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\narray"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" a2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// elements all have value 0")]),t._v("\na1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" a2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// replaces elements in a1")]),t._v("\na2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error: cannot assign to an array from a braced list")]),t._v("\n")])])]),n("blockquote",[n("p",[t._v("新标准库同时提供了成员和非成员函数版本的"),n("code",[t._v("swap")]),t._v("。非成员版本的"),n("code",[t._v("swap")]),t._v("在泛型编程中非常重要，建议统一使用非成员版本的"),n("code",[t._v("swap")]),t._v("。")])]),t._v(" "),n("h3",{attrs:{id:"容器大小操作-container-size-operations"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器大小操作-container-size-operations"}},[t._v("#")]),t._v(" 容器大小操作（Container Size Operations）")]),t._v(" "),n("p",[n("code",[t._v("size")]),t._v("成员返回容器中元素的数量；"),n("code",[t._v("empty")]),t._v("当"),n("code",[t._v("size")]),t._v("为0时返回"),n("code",[t._v("true")]),t._v("，否则返回"),n("code",[t._v("false")]),t._v("；"),n("code",[t._v("max_size")]),t._v("返回一个大于或等于该类型容器所能容纳的最大元素数量的值。"),n("code",[t._v("forward_list")]),t._v("支持"),n("code",[t._v("max_size")]),t._v("和"),n("code",[t._v("empty")]),t._v("，但不支持"),n("code",[t._v("size")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"关系运算符-relational-operators"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#关系运算符-relational-operators"}},[t._v("#")]),t._v(" 关系运算符（Relational Operators）")]),t._v(" "),n("p",[t._v("每个容器类型都支持相等运算符（"),n("code",[t._v("<mark>")]),t._v("、"),n("code",[t._v("!=")]),t._v("）。除无序关联容器外，其他容器都支持关系运算符（"),n("code",[t._v(">")]),t._v("、"),n("code",[t._v(">=")]),t._v("、"),n("code",[t._v("<")]),t._v("、"),n("code",[t._v("<=")]),t._v("）。关系运算符两侧的"),t._v("容器类型和元素类型==都必须相同。")]),t._v(" "),n("p",[t._v("两个容器的比较实际上是元素的逐对比较，其工作方式与"),n("code",[t._v("string")]),t._v("的关系运算符类似：")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("vector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" v1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" v2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" v3 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" v4 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nv1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" v2     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true; v1 and v2 differ at element [2]: v1[2] is less than v2[2]")]),t._v("\nv1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" v3     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true; all elements are equal, but v3 has fewer of them;")]),t._v("\nv1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" v4    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true; each element is equal and v1 and v4 have the same size()")]),t._v("\nv1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" v2    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false; v2 has fewer elements than v1")]),t._v("\n")])])]),n("p",[t._v("容器的运算符实际上是使用元素的相应的运算符实现，因此必须保证元素类型支持所需运算符。")]),t._v(" "),n("h2",{attrs:{id:"顺序容器操作-sequential-container-operations"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#顺序容器操作-sequential-container-operations"}},[t._v("#")]),t._v(" 顺序容器操作（Sequential Container Operations）")]),t._v(" "),n("h3",{attrs:{id:"向顺序容器添加元素-adding-elements-to-a-sequential-container"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#向顺序容器添加元素-adding-elements-to-a-sequential-container"}},[t._v("#")]),t._v(" 向顺序容器添加元素（Adding Elements to a Sequential Container）")]),t._v(" "),n("p",[t._v("除"),n("code",[t._v("array")]),t._v("外，所有标准库容器都提供灵活的内存管理，在运行时可以动态添加或删除元素。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(774),alt:"9-5"}})]),t._v(" "),n("p",[n("code",[t._v("push_back")]),t._v("将一个元素追加到容器尾部，"),n("code",[t._v("push_front")]),t._v("将元素插入容器头部。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("string word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    container"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push_back")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v("insert")]),t._v("将元素插入到迭代器指定的位置之前。一些不支持"),n("code",[t._v("push_front")]),t._v("的容器可以使用"),n("code",[t._v("insert")]),t._v("将元素插入开始位置。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("vector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" svec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nlist"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" slist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nslist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("slist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// slist.push_front("Hello!");')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// no push_front on vector but we can insert before begin()")]),t._v("\nsvec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("svec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello!"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// might be slow")]),t._v("\n")])])]),n("p",[t._v("将元素插入到"),n("code",[t._v("vector")]),t._v("、"),n("code",[t._v("deque")]),t._v("或"),n("code",[t._v("string")]),t._v("的任何位置都是合法的，但可能会很耗时。")]),t._v(" "),n("p",[t._v("在新标准库中，"),n("code",[t._v("insert")]),t._v("返回指向第一个新增元素的迭代器，而旧版本中这些操作返回"),n("code",[t._v("void")]),t._v("。如果范围为空，不插入任何元素，"),n("code",[t._v("insert")]),t._v("会返回第一个参数。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("list"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" lst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("auto")]),t._v(" iter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("begin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  iter "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lst"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iter"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" word"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// same as calling push_front")]),t._v("\n")])])]),n("p",[t._v("新标准库增加了三个直接构造而不是拷贝元素的操作："),n("code",[t._v("emplace_front")]),t._v("、"),n("code",[t._v("emplace_back")]),t._v("和"),n("code",[t._v("emplace")]),t._v("，其分别对应"),n("code",[t._v("push_front")]),t._v("、"),n("code",[t._v("push_back")]),t._v("和"),n("code",[t._v("insert")]),t._v("。当调用"),n("code",[t._v("push")]),t._v("或"),n("code",[t._v("insert")]),t._v("时，元素对象被拷贝到容器中。而调用"),n("code",[t._v("emplace")]),t._v("时，则是将"),n("mark",[t._v("参数传递给元素类型的构造函数")]),t._v("。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// uses the three-argument Sales_data constructor")]),t._v("\nc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("emplace_back")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"978-0590353403"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.99")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push_back")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"978-0590353403"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.99")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// error")]),t._v("\nc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push_back")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("Sales_data")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"978-0590353403"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.99")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[n("code",[t._v("forward_list")]),t._v("有特殊版本的"),n("code",[t._v("insert")]),t._v("和"),n("code",[t._v("emplace")]),t._v("操作，且不支持"),n("code",[t._v("push_back")]),t._v("和"),n("code",[t._v("emplace_back")]),t._v("。"),n("code",[t._v("vector")]),t._v("和"),n("code",[t._v("string")]),t._v("不支持"),n("code",[t._v("push_front")]),t._v("和"),n("code",[t._v("emplace_front")]),t._v("。")]),t._v(" "),n("h3",{attrs:{id:"访问元素-accessing-elements"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#访问元素-accessing-elements"}},[t._v("#")]),t._v(" 访问元素（Accessing Elements）")]),t._v(" "),n("p",[t._v("每个顺序容器都有一个"),n("code",[t._v("front")]),t._v("成员函数，而除了"),n("code",[t._v("forward_list")]),t._v("之外的顺序容器还有一个"),n("code",[t._v("back")]),t._v("成员函数。这两个操作分别返回首元素和尾元素的引用。")]),t._v(" "),n("p",[t._v("在调用"),n("code",[t._v("front")]),t._v("和"),n("code",[t._v("back")]),t._v("之前，要确保容器非空。")]),t._v(" "),n("p",[t._v("顺序容器的元素访问操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(775),alt:"9-6"}})]),t._v(" "),n("p",[t._v("在容器中访问元素的成员函数都返回引用类型。如果容器是"),n("code",[t._v("const")]),t._v("对象，则返回"),n("code",[t._v("const")]),t._v("引用，否则返回普通引用。")]),t._v(" "),n("p",[t._v("可以快速随机访问的容器（"),n("code",[t._v("string")]),t._v("、"),n("code",[t._v("vector")]),t._v("、"),n("code",[t._v("deque")]),t._v("和"),n("code",[t._v("array")]),t._v("）都提供下标运算符。保证下标有效是程序员的责任。如果希望确保下标合法，可以使用"),n("code",[t._v("at")]),t._v("成员函数。如果下标越界，"),n("code",[t._v("at")]),t._v("会抛出"),n("code",[t._v("out_of_range")]),t._v("异常。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("vector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" svec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// empty vector")]),t._v("\ncout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" svec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// run-time error: there are no elements in svec!")]),t._v("\ncout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" svec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("at")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// throws an out_of_range exception")]),t._v("\n")])])]),n("h3",{attrs:{id:"删除元素-erasing-elements"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#删除元素-erasing-elements"}},[t._v("#")]),t._v(" 删除元素（Erasing Elements）")]),t._v(" "),n("p",[t._v("顺序容器的元素删除操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(776),alt:"9-7"}})]),t._v(" "),n("p",[t._v("删除"),n("code",[t._v("deque")]),t._v("中除首尾位置之外的任何元素都会使所有迭代器、引用和指针失效。删除"),n("code",[t._v("vector")]),t._v("或"),n("code",[t._v("string")]),t._v("的元素后，指向删除点之后位置的迭代器、引用和指针也都会失效。")]),t._v(" "),n("p",[t._v("删除元素前，程序员必须确保目标元素存在。")]),t._v(" "),n("p",[n("code",[t._v("pop_front")]),t._v("和"),n("code",[t._v("pop_back")]),t._v("函数分别删除首元素和尾元素。"),n("code",[t._v("vector")]),t._v("和"),n("code",[t._v("string")]),t._v("类型不支持"),n("code",[t._v("pop_front")]),t._v("，"),n("code",[t._v("forward_list")]),t._v("类型不支持"),n("code",[t._v("pop_back")]),t._v("。")]),t._v(" "),n("p",[n("code",[t._v("erase")]),t._v("函数删除指定位置的元素。可以删除由一个迭代器指定的单个元素，也可以删除由一对迭代器指定的范围内的所有元素。两种形式的"),n("code",[t._v("erase")]),t._v("都返回指向删除元素（最后一个）之后位置的迭代器。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// delete the range of elements between two iterators")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// returns an iterator to the element just after the last removed element")]),t._v("\nelem1 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" slist"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("erase")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("elem1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" elem2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// after the call elem1 == elem2")]),t._v("\n")])])]),n("p",[n("code",[t._v("clear")]),t._v("函数删除容器内的所有元素。")]),t._v(" "),n("h3",{attrs:{id:"特殊的forward-list操作-specialized-forward-list-operations"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#特殊的forward-list操作-specialized-forward-list-operations"}},[t._v("#")]),t._v(" 特殊的forward_list操作（Specialized forward_list Operations）")]),t._v(" "),n("p",[t._v("在"),n("code",[t._v("forward_list")]),t._v("中添加或删除元素的操作是通过改变给定元素之后的元素来完成的。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(777),alt:"9-8"}})]),t._v(" "),n("p",[n("code",[t._v("forward_list")]),t._v("的插入和删除操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(778),alt:"9-9"}})]),t._v(" "),n("h3",{attrs:{id:"改变容器大小-resizing-a-container"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#改变容器大小-resizing-a-container"}},[t._v("#")]),t._v(" 改变容器大小（Resizing a Container）")]),t._v(" "),n("p",[t._v("顺序容器的大小操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(779),alt:"9-10"}})]),t._v(" "),n("p",[n("code",[t._v("resize")]),t._v("函数接受一个可选的元素值参数，用来初始化添加到容器中的元素，否则新元素进行值初始化。如果容器保存的是类类型元素，且"),n("code",[t._v("resize")]),t._v("向容器添加新元素，则必须提供初始值，或元素类型提供默认构造函数。")]),t._v(" "),n("h3",{attrs:{id:"容器操作可能使迭代器失效-container-operations-may-invalidate-iterators"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器操作可能使迭代器失效-container-operations-may-invalidate-iterators"}},[t._v("#")]),t._v(" 容器操作可能使迭代器失效（Container Operations May Invalidate Iterators）")]),t._v(" "),n("p",[t._v("向容器中添加或删除元素可能会使指向容器元素的指针、引用或迭代器失效。失效的指针、引用或迭代器不再表示任何元素，使用它们是一种严重的程序设计错误。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("向容器中添加元素后：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("如果容器是"),n("code",[t._v("vector")]),t._v("或"),n("code",[t._v("string")]),t._v("类型，且存储空间被重新分配，则指向容器的迭代器、指针和引用都会失效。如果存储空间未重新分配，指向插入位置之前元素的迭代器、指针和引用仍然有效，但指向插入位置之后元素的迭代器、指针和引用都会失效。")])]),t._v(" "),n("li",[n("p",[t._v("如果容器是"),n("code",[t._v("deque")]),t._v("类型，添加到除首尾之外的任何位置都会使迭代器、指针和引用失效。如果添加到首尾位置，则迭代器会失效，而指针和引用不会失效。")])]),t._v(" "),n("li",[n("p",[t._v("如果容器是"),n("code",[t._v("list")]),t._v("或"),n("code",[t._v("forward_list")]),t._v("类型，指向容器的迭代器、指针和引用仍然有效。")])])])]),t._v(" "),n("li",[n("p",[t._v("从容器中删除元素后，指向被删除元素的迭代器、指针和引用失效：")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("如果容器是"),n("code",[t._v("list")]),t._v("或"),n("code",[t._v("forward_list")]),t._v("类型，指向容器其他位置的迭代器、指针和引用仍然有效。")])]),t._v(" "),n("li",[n("p",[t._v("如果容器是"),n("code",[t._v("deque")]),t._v("类型，删除除首尾之外的任何元素都会使迭代器、指针和引用失效。如果删除尾元素，则尾后迭代器失效，其他迭代器、指针和引用不受影响。如果删除首元素，这些也不会受影响。")])]),t._v(" "),n("li",[n("p",[t._v("如果容器是"),n("code",[t._v("vector")]),t._v("或"),n("code",[t._v("string")]),t._v("类型，指向删除位置之前元素的迭代器、指针和引用仍然有效。但尾后迭代器总会失效。")])])])])]),t._v(" "),n("p",[t._v("必须保证在每次改变容器后都正确地重新定位迭代器。")]),t._v(" "),n("p",[t._v("不要保存"),n("code",[t._v("end")]),t._v("函数返回的迭代器。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// safer: recalculate end on each trip whenever the loop adds/erases elements")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("begin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// do some processing")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("begin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// advance begin because we want to insert after this element")]),t._v("\n    begin "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("begin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// insert the new value")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("begin"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// advance begin past the element we just added")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"vector对象是如何增长的-how-a-vector-grows"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vector对象是如何增长的-how-a-vector-grows"}},[t._v("#")]),t._v(" vector对象是如何增长的（How a vector Grows）")]),t._v(" "),n("p",[n("code",[t._v("vector")]),t._v("和"),n("code",[t._v("string")]),t._v("的实现通常会分配比新空间需求更大的内存空间，容器预留这些空间作为备用，可用来保存更多新元素。")]),t._v(" "),n("p",[t._v("容器大小管理操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(780),alt:"9-11"}})]),t._v(" "),n("p",[n("code",[t._v("capacity")]),t._v("函数返回容器在不扩充内存空间的情况下最多可以容纳的元素数量。"),n("code",[t._v("reserve")]),t._v("函数告知容器应该准备保存多少元素，它并不改变容器中元素的数量，仅影响容器预先分配的内存空间大小。")]),t._v(" "),n("p",[n("img",{attrs:{src:a(781),alt:"9-12"}})]),t._v(" "),n("p",[t._v("只有当需要的内存空间超过当前容量时，"),n("code",[t._v("reserve")]),t._v("才会真正改变容器容量，分配不小于需求大小的内存空间。当需求大小小于当前容量时，"),n("code",[t._v("reserve")]),t._v("并不会退回内存空间。因此在调用"),n("code",[t._v("reserve")]),t._v("之后，"),n("code",[t._v("capacity")]),t._v("会大于或等于传递给"),n("code",[t._v("reserve")]),t._v("的参数。")]),t._v(" "),n("p",[t._v("在cpp11中可以使用"),n("code",[t._v("shrink_to_fit")]),t._v("函数来要求"),n("code",[t._v("deque")]),t._v("、"),n("code",[t._v("vector")]),t._v("和"),n("code",[t._v("string")]),t._v("退回不需要的内存空间（并不保证退回）。")]),t._v(" "),n("h2",{attrs:{id:"额外的string操作-additional-string-operations"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#额外的string操作-additional-string-operations"}},[t._v("#")]),t._v(" 额外的string操作（Additional string Operations）")]),t._v(" "),n("h3",{attrs:{id:"构造string的其他方法-other-ways-to-construct-strings"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造string的其他方法-other-ways-to-construct-strings"}},[t._v("#")]),t._v(" 构造string的其他方法（Other Ways to Construct strings）")]),t._v(" "),n("p",[t._v("构造"),n("code",[t._v("string")]),t._v("的其他方法：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(782),alt:"9-13"}})]),t._v(" "),n("p",[t._v("从另一个"),n("code",[t._v("string")]),t._v("对象拷贝字符构造"),n("code",[t._v("string")]),t._v("时，如果提供的拷贝开始位置（可选）大于给定"),n("code",[t._v("string")]),t._v("的大小，则构造函数会抛出"),n("code",[t._v("out_of_range")]),t._v("异常。")]),t._v(" "),n("p",[t._v("子字符串操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(783),alt:"9-14"}})]),t._v(" "),n("p",[t._v("如果传递给"),n("code",[t._v("substr")]),t._v("函数的开始位置超过"),n("code",[t._v("string")]),t._v("的大小，则函数会抛出"),n("code",[t._v("out_of_range")]),t._v("异常。")]),t._v(" "),n("h3",{attrs:{id:"改变string的其他方法-other-ways-to-change-a-string"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#改变string的其他方法-other-ways-to-change-a-string"}},[t._v("#")]),t._v(" 改变string的其他方法（Other Ways to Change a string）")]),t._v(" "),n("p",[t._v("修改"),n("code",[t._v("string")]),t._v("的操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(784),alt:"9-15"}})]),t._v(" "),n("p",[n("code",[t._v("append")]),t._v("函数是在"),n("code",[t._v("string")]),t._v("末尾进行插入操作的简写形式。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[t._v("string "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("s")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cpp Primer"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" s2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// initialize s and s2 to "cpp Primer"')]),t._v("\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 4th Ed."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// s == "cpp Primer 4th Ed."')]),t._v("\ns2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('" 4th Ed."')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// equivalent: appends " 4th Ed." to s2; s == s2')]),t._v("\n")])])]),n("p",[n("code",[t._v("replace")]),t._v("函数是调用"),n("code",[t._v("erase")]),t._v("和"),n("code",[t._v("insert")]),t._v("函数的简写形式。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// equivalent way to replace "4th" by "5th"')]),t._v("\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("erase")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("         "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// s == "cpp Primer Ed."')]),t._v("\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("insert")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5th"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// s == "cpp Primer 5th Ed."')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// starting at position 11, erase three characters and then insert "5th"')]),t._v("\ns2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("replace")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"5th"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// equivalent: s == s2")]),t._v("\n")])])]),n("h3",{attrs:{id:"string搜索操作-string-search-operations"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#string搜索操作-string-search-operations"}},[t._v("#")]),t._v(" string搜索操作（string Search Operations）")]),t._v(" "),n("p",[n("code",[t._v("string")]),t._v("的每个搜索操作都返回一个"),n("code",[t._v("string::size_type")]),t._v("值，表示匹配位置的下标。如果搜索失败，则返回一个名为"),n("code",[t._v("string::npos")]),t._v("的"),n("code",[t._v("static")]),t._v("成员。标准库将"),n("code",[t._v("npos")]),t._v("定义为"),n("code",[t._v("const string::size_type")]),t._v("类型，并初始化为-1。")]),t._v(" "),n("p",[t._v("不建议用"),n("code",[t._v("int")]),t._v("或其他带符号类型来保存"),n("code",[t._v("string")]),t._v("搜索函数的返回值。")]),t._v(" "),n("p",[n("code",[t._v("string")]),t._v("搜索操作：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(785),alt:"9-16"}})]),t._v(" "),n("h3",{attrs:{id:"compare函数-the-compare-functions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#compare函数-the-compare-functions"}},[t._v("#")]),t._v(" compare函数（The compare Functions）")]),t._v(" "),n("p",[n("code",[t._v("string")]),t._v("类型提供了一组"),n("code",[t._v("compare")]),t._v("函数进行字符串比较操作，类似C标准库的"),n("code",[t._v("strcmp")]),t._v("函数。")]),t._v(" "),n("p",[n("code",[t._v("compare")]),t._v("函数的几种参数形式：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(786),alt:"9-17"}})]),t._v(" "),n("h3",{attrs:{id:"数值转换-numeric-conversions"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数值转换-numeric-conversions"}},[t._v("#")]),t._v(" 数值转换（Numeric Conversions）")]),t._v(" "),n("p",[t._v("cpp11增加了"),n("code",[t._v("string")]),t._v("和数值之间的转换函数：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(787),alt:"9-18"}})]),t._v(" "),n("p",[t._v("进行数值转换时，"),n("code",[t._v("string")]),t._v("参数的第一个非空白字符必须是符号（"),n("code",[t._v("+")]),t._v("或"),n("code",[t._v("-")]),t._v("）或数字。它可以以"),n("code",[t._v("0x")]),t._v("或"),n("code",[t._v("0X")]),t._v("开头来表示十六进制数。对于转换目标是浮点值的函数，"),n("code",[t._v("string")]),t._v("参数也可以以小数点开头，并可以包含"),n("code",[t._v("e")]),t._v("或"),n("code",[t._v("E")]),t._v("来表示指数部分。")]),t._v(" "),n("p",[t._v("如果给定的"),n("code",[t._v("string")]),t._v("不能转换为一个数值，则转换函数会抛出"),n("code",[t._v("invalid_argument")]),t._v("异常。如果转换得到的数值无法用任何类型表示，则抛出"),n("code",[t._v("out_of_range")]),t._v("异常。")]),t._v(" "),n("h2",{attrs:{id:"容器适配器-container-adaptors"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#容器适配器-container-adaptors"}},[t._v("#")]),t._v(" 容器适配器（Container Adaptors）")]),t._v(" "),n("p",[t._v("标准库定义了"),n("code",[t._v("stack")]),t._v("、"),n("code",[t._v("queue")]),t._v("和"),n("code",[t._v("priority_queue")]),t._v("三种容器适配器。容器适配器可以改变已有容器的工作机制。")]),t._v(" "),n("p",[t._v("所有容器适配器都支持的操作和类型：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(788),alt:"9-19"}})]),t._v(" "),n("p",[t._v("默认情况下，"),n("code",[t._v("stack")]),t._v("和"),n("code",[t._v("queue")]),t._v("是基于"),n("code",[t._v("deque")]),t._v("实现的，"),n("code",[t._v("priority_queue")]),t._v("是基于"),n("code",[t._v("vector")]),t._v("实现的。可以在创建适配器时将一个命名的顺序容器作为第二个类型参数，来重载默认容器类型。")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// empty stack implemented on top of vector")]),t._v("\nstack"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" str_stk"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// str_stk2 is implemented on top of vector and initially holds a copy of svec")]),t._v("\nstack"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" vector"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("str_stk2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("svec"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),n("p",[t._v("所有适配器都要求容器具有添加和删除元素的能力，因此适配器不能构造在"),n("code",[t._v("array")]),t._v("上。适配器还要求容器具有添加、删除和访问尾元素的能力，因此也不能用"),n("code",[t._v("forward_list")]),t._v("构造适配器。")]),t._v(" "),n("p",[t._v("栈适配器"),n("code",[t._v("stack")]),t._v("定义在头文件"),n("code",[t._v("stack")]),t._v("中，其支持的操作如下：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(789),alt:"9-20"}})]),t._v(" "),n("p",[t._v("队列适配器"),n("code",[t._v("queue")]),t._v("和"),n("code",[t._v("priority_queue")]),t._v("定义在头文件"),n("code",[t._v("queue")]),t._v("中，其支持的操作如下：")]),t._v(" "),n("p",[n("img",{attrs:{src:a(790),alt:"9-21"}})]),t._v(" "),n("p",[n("code",[t._v("queue")]),t._v("使用先进先出（first-in，first-out，FIFO）的存储和访问策略。进入队列的对象被放置到队尾，而离开队列的对象则从队首删除。")])])}),[],!1,null,null,null);s.default=e.exports},771:function(t,s,a){t.exports=a.p+"assets/img/9-2.e19666a3.png"},772:function(t,s,a){t.exports=a.p+"assets/img/9-3.a7726e82.png"},773:function(t,s,a){t.exports=a.p+"assets/img/9-4.1c68220f.png"},774:function(t,s,a){t.exports=a.p+"assets/img/9-5.88de5545.png"},775:function(t,s,a){t.exports=a.p+"assets/img/9-6.8b2e9e3d.png"},776:function(t,s,a){t.exports=a.p+"assets/img/9-7.631e184f.png"},777:function(t,s,a){t.exports=a.p+"assets/img/9-8.d416885d.png"},778:function(t,s,a){t.exports=a.p+"assets/img/9-9.2c3a9130.png"},779:function(t,s,a){t.exports=a.p+"assets/img/9-10.121b9e3d.png"},780:function(t,s,a){t.exports=a.p+"assets/img/9-11.31201e0a.png"},781:function(t,s,a){t.exports=a.p+"assets/img/9-12.777f19a1.png"},782:function(t,s,a){t.exports=a.p+"assets/img/9-13.73e7f89a.png"},783:function(t,s,a){t.exports=a.p+"assets/img/9-14.567fec29.png"},784:function(t,s,a){t.exports=a.p+"assets/img/9-15.a4bf5b4b.png"},785:function(t,s,a){t.exports=a.p+"assets/img/9-16.3cd336c3.png"},786:function(t,s,a){t.exports=a.p+"assets/img/9-17.fe82c291.png"},787:function(t,s,a){t.exports=a.p+"assets/img/9-18.d0ad15af.png"},788:function(t,s,a){t.exports=a.p+"assets/img/9-19.bb3490af.png"},789:function(t,s,a){t.exports=a.p+"assets/img/9-20.ba054928.png"},790:function(t,s,a){t.exports=a.p+"assets/img/9-21.656e8a34.png"}}]);