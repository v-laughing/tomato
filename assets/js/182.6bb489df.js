(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{1178:function(t,e,a){"use strict";a.r(e);var p=a(7),n=Object(p.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"webpack"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[t._v("#")]),t._v(" webpack")]),t._v(" "),a("p",[t._v("简化页面依赖的管理，通过将页面打包为一个文件来降低页面加载时请求的资源数。")]),t._v(" "),a("p",[t._v("将每个资源视为一个模块，把页面逻辑当作一个整体。webpack 从入口文件开始，找到所有的依赖文件，将各个依赖文件模块通过 loader 和 plugins 处理后，打包成一个或多个 bundle。")]),t._v(" "),a("p",[t._v("Webpack 具有四个核心的概念，分别是 Entry（入口）、Output（输出）、loader 和 Plugins（插件）。")]),t._v(" "),a("p",[a("strong",[t._v("Entry")]),t._v("： webpack 的入口起点，它指示 webpack 应该从哪个模块开始着手，来作为其构建内部依赖图的开始。")]),t._v(" "),a("p",[a("strong",[t._v("Output")]),t._v("：告诉 webpack 在哪里输出它所创建的打包文件，也可指定打包文件的名称，默认位置为 ./dist。")]),t._v(" "),a("p",[a("strong",[t._v("loader")]),t._v("： webpack 的编译器，将各种类型的资源转换成 JavaScript 模块，可以指定处理哪些文件或通过什么工具预处理哪些文件。")]),t._v(" "),a("p",[a("strong",[t._v("Plugins")]),t._v("：包括打包、优化、压缩、搭建服务器等等。")]),t._v(" "),a("blockquote",[a("p",[t._v("配置很麻烦")])])])}),[],!1,null,null,null);e.default=n.exports}}]);