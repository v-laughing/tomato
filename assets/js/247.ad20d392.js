(window.webpackJsonp=window.webpackJsonp||[]).push([[247],{1348:function(t,_,v){"use strict";v.r(_);var r=v(7),n=Object(r.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"web-页面请求过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#web-页面请求过程"}},[t._v("#")]),t._v(" Web 页面请求过程")]),t._v(" "),v("h2",{attrs:{id:"_1-dhcp-配置主机信息-ip"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-dhcp-配置主机信息-ip"}},[t._v("#")]),t._v(" 1. DHCP 配置主机信息（IP）")]),t._v(" "),v("p",[t._v("假设主机最开始没有 IP 地址以及其它信息，那么就需要先通过[[application#动态主机配置协议|DHCP]] 来获取。")]),t._v(" "),v("p",[v("strong",[t._v("报文封装过程")]),t._v("\n按网络层次逐步往下封装\n"),v("code",[t._v("DHCP请求报文->UDP报文段(传输层)->IP数据报(网络层)->MAC帧(链路层)")])]),t._v(" "),v("ul",[v("li",[v("p",[t._v("主机生成一个 DHCP 请求报文，并将这个报文放入具有目的端口 67 和源端口 68 的 [[transport#UDP 首部格式|UDP报文段]] 中。")])]),t._v(" "),v("li",[v("p",[t._v("该报文段则被放入在一个具有广播 IP 目的地址(255.255.255.255) 和源 IP 地址（0.0.0.0）的 [[network#IP 数据报格式|IP 数据报]]中。")])]),t._v(" "),v("li",[v("p",[t._v("该数据报则被放置在 [[link#1 封装成帧|MAC帧]]中，该帧具有目的地址 FF: FF: FF: FF: FF:FF，将广播到与交换机连接的所有设备。")])])]),t._v(" "),v("p",[t._v("DHCP服务器收到广播帧后，依次向上分解数据包，生成 DHCP ACK 报文。")]),t._v(" "),v("blockquote",[v("p",[t._v("该帧的目的地址是请求主机的"),v("strong",[t._v("MAC 地址")]),t._v("。因为交换机具有自学习能力，之前主机发送了广播帧之后就记录了 MAC 地址到其转发接口的交换表项，因此现在交换机就可以直接知道应该向哪个接口发送该帧。")])]),t._v(" "),v("p",[t._v("主机收到该帧后，就配置它的 IP 地址、子网掩码和 DNS 服务器的 IP 地址，并在其 IP 转发表中安装默认网关。")]),t._v(" "),v("h2",{attrs:{id:"dns-解析域名"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dns-解析域名"}},[t._v("#")]),t._v(" DNS 解析域名")]),t._v(" "),v("p",[t._v("主机通过浏览器生成一个 [[transport#基本概念|TCP 套接字]]，套接字向 HTTP 服务器发送 HTTP 请求。为了生成该套接字，主机需要知道网站的域名对应的 IP 地址。这个过程称为[[application#域名解析过程|DNS解析]]。")]),t._v(" "),v("p",[v("strong",[t._v("ARP地址解析")]),t._v("\n通过DHCP过程，主机可以得到本地DNS（或网关路由）的 IP 地址，为了在链路层中通信，需要获得其MAC 地址。这个过程使用[[network#地址解析协议 ARP|ARP 协议]]。")]),t._v(" "),v("p",[v("strong",[t._v("路由选择")]),t._v("\n如果本地DNS查不到，则以迭代或递归的方式向其他DNS服务器查询，这个过程通过[[network#路由器|路由器]]的转发在"),v("mark",[t._v("广域网")]),t._v("内进行，会进行[[network#路由选择协议|路由选择]]。")]),t._v(" "),v("h2",{attrs:{id:"_3-http-请求页面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-http-请求页面"}},[t._v("#")]),t._v(" 3. HTTP 请求页面")]),t._v(" "),v("p",[v("strong",[t._v("建立连接")]),t._v("\n在用套接字与服务器通信之前，需与服务器建立TCP连接，即所说的[[transport#TCP 的三次握手|TCP 的三次握手]]。")]),t._v(" "),v("p",[v("strong",[t._v("发送请求报文")]),t._v("\n连接建立之后，浏览器生成 [[HTTP#1 请求报文|HTTP GET 报文]]，并交付给 HTTP 服务器。")]),t._v(" "),v("p",[v("strong",[t._v("获取响应报文")]),t._v("\nHTTP 服务器从 TCP 套接字读取 HTTP GET 报文，生成一个[[HTTP#2 响应报文| HTTP 响应报文]]，将 Web 页面内容放入报文主体中，发回给主机。")]),t._v(" "),v("p",[v("strong",[t._v("渲染页面")]),t._v("\n浏览器收到 HTTP 响应报文后，抽取出 Web 页面内容，之后进行[[docs/web/web#渲染页面|渲染]]，显示 Web 页面。")]),t._v(" "),v("p",[v("strong",[t._v("断开连接")]),t._v("\n当数据传送完毕，需要断开 tcp 连接，此时发起 [[transport#TCP 的四次挥手|tcp 四次挥手]]。")])])}),[],!1,null,null,null);_.default=n.exports}}]);