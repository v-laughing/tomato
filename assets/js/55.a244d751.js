(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{1088:function(t,a){t.exports="data:image/png;base64,"},1089:function(t,a,s){t.exports=s.p+"assets/img/html-parase.3eb44c71.png"},1090:function(t,a,s){t.exports=s.p+"assets/img/browser_parse_html.a4a99b39.png"},1091:function(t,a,s){t.exports=s.p+"assets/img/browser_parse_rendertree.b8b35e2b.png"},1092:function(t,a,s){t.exports=s.p+"assets/img/js_load.909c198b.png"},1420:function(t,a,s){"use strict";s.r(a);var v=s(7),_=Object(v.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基础"}},[t._v("#")]),t._v(" 基础")]),t._v(" "),v("p",[t._v("浏览器的主要功能就是向服务器发出请求，在浏览器窗口中展示服务器发送过来的网络资源。")]),t._v(" "),v("h2",{attrs:{id:"结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#结构"}},[t._v("#")]),t._v(" 结构")]),t._v(" "),v("p",[t._v("一般构成：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("用户界面")]),t._v("：包括地址栏、前进/后退按钮、书签菜单等。")]),t._v(" "),v("li",[v("strong",[t._v("浏览器引擎")]),t._v(" ：在用户界面和渲染引擎之间传送指令。")]),t._v(" "),v("li",[v("strong",[t._v("渲染引擎")]),t._v(" ：负责显示请求的内容。")]),t._v(" "),v("li",[v("strong",[t._v("用户界面后端")]),t._v("：用于绘制基本的窗口小部件，比如组合框和窗口。")]),t._v(" "),v("li",[v("strong",[t._v("JavaScript 解释器")]),t._v("：用于解析和执行 JavaScript 代码。（通常也称JS引擎）")]),t._v(" "),v("li",[v("strong",[t._v("数据存储")]),t._v("：持久层。")])]),t._v(" "),v("p",[v("img",{attrs:{src:s(1088),alt:"avatar"}}),v("br")]),t._v(" "),v("p",[t._v("更概括的，可以分为外壳与内核：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("shell")]),t._v("：外壳。例如菜单，工具栏等。提供给用户界面操作，参数设置等等。调用内核来实现各种功能。")]),t._v(" "),v("li",[v("strong",[t._v("内核")]),t._v("：一般着重指渲染引擎，有时也包含JS引擎。")])]),t._v(" "),v("h2",{attrs:{id:"执行架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#执行架构"}},[t._v("#")]),t._v(" 执行架构")]),t._v(" "),v("p",[t._v("浏览器一般会划分为以下几个进程：")]),t._v(" "),v("ul",[v("li",[t._v("Browser进程：浏览器的主进程，负责协调、主控。（只有一个）")]),t._v(" "),v("li",[t._v("第三方插件进程：每种类型的插件对应一个进程，仅当使用该插件的时候才创建。")]),t._v(" "),v("li",[t._v("GPU进程：最多一个，用于3D绘制。")]),t._v(" "),v("li",[t._v("浏览器渲染进程（内核）：控制页面渲染，脚本执行，事件处理等。")])]),t._v(" "),v("p",[t._v("在Chrome中，打开一个标签页"),v("code",[t._v("tab")]),t._v("会新建一个渲染进程，相较于线程"),v("code",[t._v("tab")]),t._v("，有：")]),t._v(" "),v("ul",[v("li",[t._v("一个tab崩溃，不会导致其他tab。")]),t._v(" "),v("li",[t._v("进程之间不共享资源，能够防止恶意修改或者获取非授权数据等安全行为。")])]),t._v(" "),v("h2",{attrs:{id:"内核"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内核"}},[t._v("#")]),t._v(" 内核")]),t._v(" "),v("p",[t._v("浏览器内核是多线程，一般有以下常驻线程：")]),t._v(" "),v("ul",[v("li",[t._v("GUI 渲染线程：解析页面内容和将其渲染至浏览器界面。")]),t._v(" "),v("li",[t._v("JavaScript引擎线程：单线程的（多线程要引入锁，带来更大的复杂度）。")]),t._v(" "),v("li",[t._v("定时触发器线程：setInterval与setTimeout所在的线程。")]),t._v(" "),v("li",[t._v("事件触发线程：将需要处理的事件添加到任务队列中，等待JS引擎的处理。")]),t._v(" "),v("li",[t._v("异步http请求线程：当请求的状态变更时，如果设置有回调函数，异步线程会产生状态变更事件。")])]),t._v(" "),v("p",[t._v("注意几点：")]),t._v(" "),v("ul",[v("li",[t._v("由于JS引擎与GUI引擎都可操作DOM，同时运行可能引起数据不一致问题，因此两者被设计为"),v("strong",[t._v("互斥的")]),t._v("（某一时刻只有其中一个线程在跑）。")]),t._v(" "),v("li",[t._v("浏览器定时计数器不是由JavaScript引擎负责的，因为JS线程处于阻塞状态时会影响记计时的准确。")])]),t._v(" "),v("h3",{attrs:{id:"主要内核比较"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#主要内核比较"}},[t._v("#")]),t._v(" 主要内核比较")]),t._v(" "),v("ul",[v("li",[t._v("Trident：IE 浏览器内核。与 W3C 标准脱节，有大量 Bug 等\n安全问题没有解决。")]),t._v(" "),v("li",[t._v("Gecko：Firefox 内核。功能强大、丰富，可以支持很多复杂网页效果和浏览器扩展接口，但要消耗很多的资源，比如内存。")]),t._v(" "),v("li",[t._v("Presto：Opera 曾经采用的内核。浏览网页速度很快，为此牺牲了一部分网页兼容性。")]),t._v(" "),v("li",[t._v("Webkit：Safari内核。网页浏览速度较快，对网页代码的兼容性较低。")]),t._v(" "),v("li",[t._v("Blink：Chrome 浏览器内核，Webkit 的一个分支。")])]),t._v(" "),v("h2",{attrs:{id:"worker"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#worker"}},[t._v("#")]),t._v(" Worker")]),t._v(" "),v("p",[t._v("因GUI线程与JS线程的互斥，在JS处理大量数据的时候，有可能导致页面GUI线程的"),v("strong",[t._v("假死")]),t._v("。在这背景下，为了让页面有更好的体验，W3C在HTML5的规范中提出了Web Worker的概念，允许浏览器通过"),v("mark",[t._v("后台线程")]),t._v("来执行复杂的事物或者逻辑。")]),t._v(" "),v("p",[t._v("可以通过下面方式在主线程中建立一个后台线程。当然，主线程与后台线程可以进行通信。")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" worker "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Worker")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'workers.js'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),v("h3",{attrs:{id:"shareworkder"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#shareworkder"}},[t._v("#")]),t._v(" shareWorkder")]),t._v(" "),v("p",[t._v("在页面存在的生命周期内创建一个唯一的线程，并且开启的多个页面会共享该线程。当所有的页面都关闭之后该线程才被销毁。")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 相同名字的shareWorkder共享同一线程")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" worker "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SharedWorker")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sharedworkers.js'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myName'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),v("p",[t._v("参考： "),v("a",{attrs:{href:"https://www.zhuwenlong.com/blog/article/590ea64fe55f0f385f9a12e5",target:"_blank",rel:"noopener noreferrer"}},[t._v("《JavaScript 的多线程，Worker 和 SharedWorker》"),v("OutboundLink")],1)]),t._v(" "),v("h2",{attrs:{id:"tab通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tab通信"}},[t._v("#")]),t._v(" Tab通信")]),t._v(" "),v("p",[t._v("浏览器的每一个tab标签都是一个独立的线程或进程。两者之间的通信可以通过引入"),v("strong",[t._v("存储中介")]),t._v("来实现。")]),t._v(" "),v("ul",[v("li",[t._v("服务器：通过[[docs/web/web#服务端推送 | 服务端推送]]技术，如websocket，标签页可以向服务器发送数据，然后服务器向其他标签页推送转发。")]),t._v(" "),v("li",[t._v("共享线程：通过ShareWorker可以使多个tab共享一个线程。")]),t._v(" "),v("li",[t._v("本地存储：localStorge 被添加、修改或删除时，会触发storage 事件，通过监听 storage 事件，可以进行页面通信。")])]),t._v(" "),v("h1",{attrs:{id:"解析与渲染"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#解析与渲染"}},[t._v("#")]),t._v(" 解析与渲染")]),t._v(" "),v("p",[t._v("大致过程为："),v("code",[t._v("构建DOM -> 构建CSSOM -> 构建渲染树 -> 布局 -> 绘制")]),t._v("。")]),t._v(" "),v("p",[v("img",{attrs:{src:s(1089),alt:"avatar"}}),v("br")]),t._v(" "),v("p",[v("strong",[t._v("构建DOM树")]),t._v("\nDOM 树是DOM 元素及属性节点组成。浏览器通过"),v("strong",[t._v("深度优先遍历")]),t._v("文档构建一棵 DOM 树。")]),t._v(" "),v("p",[v("img",{attrs:{src:s(1090),alt:"avatar"}}),v("br")]),t._v(" "),v("p",[v("strong",[t._v("构建CSSOM树")]),t._v("\n仅根据CSS构建，浏览器在 CSS 树生成之前不会进行渲染。")]),t._v(" "),v("p",[v("strong",[t._v("构建渲染树")]),t._v("\n渲染树的节点被称为渲染对象。渲染树只会包括需要显示的节点和及其样式信息。因此，渲染树与DOM树并不一一对应。")]),t._v(" "),v("p",[v("img",{attrs:{src:s(1091),alt:"avatar"}}),v("br")]),t._v(" "),v("p",[v("strong",[t._v("布局与绘制")]),t._v("\n根据渲染树来进行布局，主要弄清楚各个节点在页面中的确切位置和大小。遍历渲染树并调用渲染对象的 paint 方法将它们的内容显示在屏幕上。")]),t._v(" "),v("blockquote",[v("p",[t._v("整个过程是逐步完成的。为了更好的用户体验，渲染引擎将会尽可能早的将内容呈现到屏幕上，并不会等到所有的html 都解析完成之后再去构建和布局 render 树。它是解析完一部分内容就显示一部分内容。")])]),t._v(" "),v("p",[t._v("DOM加载完后将触发"),v("code",[t._v("DOMContentLoaded")]),t._v(" 事件；页面渲染完毕将触发"),v("code",[t._v("onload")]),t._v(" 事件。")]),t._v(" "),v("h2",{attrs:{id:"资源加载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#资源加载"}},[t._v("#")]),t._v(" 资源加载")]),t._v(" "),v("p",[t._v("浏览器自上而下解析文档，当遇到"),v("strong",[t._v("外部资源")]),t._v("时，有可能阻塞页面的解析或渲染过程。是否阻塞取决于各类资源的执行在页面绘制过程中"),v("mark",[t._v("是否会有冲突")]),t._v("。")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("资源的"),v("mark",[t._v("加载过程")]),t._v("显然是独立的且不相干的，因此不必阻塞其他过程，虽然有些浏览器会。但浏览器会"),v("mark",[t._v("限制并行请求数量")]),t._v("。")])]),t._v(" "),v("li",[v("p",[t._v("图片显示不阻塞其他过程，但可能使"),v("mark",[t._v("页面回流")]),t._v("。")])]),t._v(" "),v("li",[v("p",[t._v("JS引擎与GUI引擎是"),v("mark",[t._v("互斥的")]),t._v("，因此JS执行与页面解析渲染过程不能同时进行。JS默认阻塞后面页面的解析（此时JS可操作前面已解析过的DOM节点）。")])]),t._v(" "),v("li",[v("p",[t._v("DOM树与CSSOM树独立构建。因此CSS不阻塞DOM树解析，当阻塞渲染树构建。")])]),t._v(" "),v("li",[v("p",[t._v("JS可能会基于前面的节点的样式进行操作，因此CSS解析会阻塞后面的JS执行。")])])]),t._v(" "),v("h3",{attrs:{id:"js加载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js加载"}},[t._v("#")]),t._v(" JS加载")]),t._v(" "),v("p",[t._v("默认情况下，浏览器同步加载 JavaScript 脚本，即渲染引擎遇到"),v("code",[t._v("<script>")]),t._v("标签就会停下来。\n可以通过加入"),v("code",[t._v("async")]),t._v("或"),v("code",[t._v("defer")]),t._v("属性改变加载JS行为。")]),t._v(" "),v("p",[v("strong",[t._v("async")]),t._v("：异步加载JS完立即执行，\n"),v("strong",[t._v("defer")]),t._v(": 延迟加载，解析文档完执行。")]),t._v(" "),v("blockquote",[v("p",[t._v("在加载多个JS脚本的时候，async是无顺序的加载，而defer是有顺序的加载。")])]),t._v(" "),v("p",[v("img",{attrs:{src:s(1092),alt:"avatar"}}),v("br")]),t._v(" "),v("h3",{attrs:{id:"预加载与懒加载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#预加载与懒加载"}},[t._v("#")]),t._v(" 预加载与懒加载")]),t._v(" "),v("p",[v("strong",[t._v("懒加载")]),t._v("：页面中的资源（通常是图片）延迟加载，可以减少资源并行请求数量，优化用户体验。通常在"),v("mark",[t._v("电商项目")]),t._v("中使用。")]),t._v(" "),v("p",[t._v("实现思路很简单，当某种行为，如滚动，点击发生时，通过JS加载资源。")]),t._v(" "),v("p",[t._v("以图片为例，可以这样实现：将资源"),v("code",[t._v("url")]),t._v("放在另一个属性，如"),v("code",[t._v("data-src")]),t._v("。当图片将出现在视野中时，利用JS将"),v("code",[t._v("data-src")]),t._v("的值赋给"),v("code",[t._v("src")]),t._v("，此时浏览器加载该资源。")]),t._v(" "),v("p",[v("strong",[t._v("预加载")]),t._v("：在资源尚未出现在视野，先加载，供后面直接使用。可"),v("mark",[t._v("减少白屏")]),t._v("出现的时长。")]),t._v(" "),v("p",[t._v("实现的方式有：")]),t._v(" "),v("ul",[v("li",[t._v("利用"),v("code",[t._v("link")]),t._v("标签的"),v("code",[t._v("preload")]),t._v("或"),v("code",[t._v("prefetch")]),t._v("。")]),t._v(" "),v("li",[t._v("利用"),v("code",[t._v("display:none")]),t._v("。")]),t._v(" "),v("li",[t._v("利用"),v("code",[t._v("Ajax")]),t._v("将资源请求并存储在变量中，再通过"),v("code",[t._v("JS")]),t._v("调用资源。")])]),t._v(" "),v("p",[v("strong",[t._v("preload & prefetch")])]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",[t._v("/")]),t._v(" "),v("th",[t._v("preload")]),t._v(" "),v("th",[t._v("prefetch")])])]),t._v(" "),v("tbody",[v("tr",[v("td",[t._v("加载时机")]),t._v(" "),v("td",[t._v("立即加载，但不阻塞onload事件")]),t._v(" "),v("td",[t._v("浏览器闲置时加载")])]),t._v(" "),v("tr",[v("td",[t._v("适用场景")]),t._v(" "),v("td",[v("mark",[t._v("当前页面")]),t._v("接下来要使用的资源")]),t._v(" "),v("td",[v("mark",[t._v("接下来的页面")]),t._v("的资源")])]),t._v(" "),v("tr",[v("td",[t._v("浏览器支持")]),t._v(" "),v("td",[t._v("一般")]),t._v(" "),v("td",[t._v("较高")])])])]),t._v(" "),v("h2",{attrs:{id:"回流与重绘"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#回流与重绘"}},[t._v("#")]),t._v(" 回流与重绘")]),t._v(" "),v("p",[v("strong",[t._v("重绘")]),t._v("：当渲染树的一些元素需要更新属性，但这些属性不会影响布局时。\n"),v("strong",[t._v("回流")]),t._v("：当渲染树的一些元素的规模尺寸、布局、隐藏等改变而需要重新构建。")]),t._v(" "),v("ul",[v("li",[t._v("计算 offsetWidth 和 offsetHeight 属性。")]),t._v(" "),v("li",[t._v("设置 style 属性的值。")])]),t._v(" "),v("p",[v("mark",[t._v("回流必定会发生重绘，重绘不一定会引发回流。")])]),t._v(" "),v("p",[t._v("减少回流：")]),t._v(" "),v("ul",[v("li",[t._v("使用 transform 替代 top。")]),t._v(" "),v("li",[t._v("使用 visibility 替换 display: none。")]),t._v(" "),v("li",[t._v("不要使用 table 布局，一个小改动可能会造成整个 table 的重新布局。")]),t._v(" "),v("li",[t._v("将动画应用到"),v("code",[t._v("absolute")]),t._v("或"),v("code",[t._v("fixed")]),t._v("的元素上。")]),t._v(" "),v("li",[t._v("CSS 选择符从右往左匹配查找，避免节点层级过多。")]),t._v(" "),v("li",[t._v("避免多次修改style，用class代替。")]),t._v(" "),v("li",[t._v("将频繁重绘或者回流的节点设置为图层。")])]),t._v(" "),v("h2",{attrs:{id:"渲染异常"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#渲染异常"}},[t._v("#")]),t._v(" 渲染异常")]),t._v(" "),v("p",[v("strong",[t._v("FOUC")]),t._v("：无样式内容闪烁。有些浏览器渲染机制（比如firefox），在CSS加载之前，先呈现了HTML，就会导致展示出无样式内容，然后样式突然呈现的现象。")]),t._v(" "),v("p",[v("strong",[t._v("白屏")]),t._v("：有些浏览器渲染机制（chrome），先构建DOM树和CSSOM树，构建完成后再进行渲染。如果CSSOM树构建较慢，会导致白屏。")]),t._v(" "),v("h2",{attrs:{id:"js操作dom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#js操作dom"}},[t._v("#")]),t._v(" JS操作DOM")]),t._v(" "),v("p",[t._v("操作DOM，需要渲染引擎与JS 引擎两个进程之间进行通信，这会带来一些性能上的损耗。并且，操作 DOM 可能还会带来重绘回流的情况。")]),t._v(" "),v("h1",{attrs:{id:"数据存储"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据存储"}},[t._v("#")]),t._v(" 数据存储")]),t._v(" "),v("h2",{attrs:{id:"cookie"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[t._v("#")]),t._v(" Cookie")]),t._v(" "),v("p",[t._v("服务器端用于记录用户信息的一种方式，由服务器设置，在客户端存储。客户端发起"),v("strong",[t._v("同源请求")]),t._v("时，会携带该信息发送给服务器端。")]),t._v(" "),v("p",[t._v("最多存储 4 k 数据，生存时间由 expires 属性指定。")]),t._v(" "),v("h3",{attrs:{id:"用途"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#用途"}},[t._v("#")]),t._v(" 用途")]),t._v(" "),v("ul",[v("li",[t._v("会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）")]),t._v(" "),v("li",[t._v("个性化设置（如用户自定义设置、主题等）")]),t._v(" "),v("li",[t._v("浏览器行为跟踪（如跟踪分析用户行为等）")])]),t._v(" "),v("h3",{attrs:{id:"创建过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#创建过程"}},[t._v("#")]),t._v(" 创建过程")]),t._v(" "),v("p",[t._v("服务器发送的响应报文包含 Set-Cookie 首部字段，客户端得到响应报文后把 Cookie 内容保存到浏览器中。")]),t._v(" "),v("div",{staticClass:"language-html extra-class"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[t._v("HTTP/1.0 200 OK\nContent-type: text/html\nSet-Cookie: yummy_cookie=choco\nSet-Cookie: tasty_cookie=strawberry\n\n[page content]\n")])])]),v("p",[t._v("客户端之后对同一个服务器发送请求时，会从浏览器中取出 Cookie 信息并通过 Cookie 请求首部字段发送给服务器。")]),t._v(" "),v("div",{staticClass:"language-html extra-class"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[t._v("GET /sample_page.html HTTP/1.1\nHost: www.example.org\nCookie: yummy_cookie=choco; tasty_cookie=strawberry\n")])])]),v("h3",{attrs:{id:"分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),v("ul",[v("li",[t._v("会话期 Cookie：浏览器关闭之后它会被自动删除，也就是说它仅在会话期内有效。")]),t._v(" "),v("li",[t._v("持久性 Cookie：指定过期时间（Expires）或有效期（max-age）之后就成为了持久性的 Cookie。")])]),t._v(" "),v("div",{staticClass:"language-html extra-class"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[t._v("Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT;\n")])])]),v("h3",{attrs:{id:"作用域"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),v("p",[t._v("Domain 标识指定了"),v("mark",[t._v("哪些主机可以接受 Cookie")]),t._v("。如果不指定，默认为当前文档的主机（不包含子域名）。如果指定了 Domain，则一般包含子域名。例如，如果设置 Domain=mozilla.org，则 Cookie 也包含在子域名中（如 developer.mozilla.org）。")]),t._v(" "),v("p",[t._v("Path 标识指定了主机下的"),v("mark",[t._v("哪些路径可以接受")]),t._v(' Cookie（该 URL 路径必须存在于请求 URL 中）。以字符 %x2F ("/") 作为路径分隔符，子路径也会被匹配。例如，设置 Path=/docs，则以下地址都会匹配：')]),t._v(" "),v("ul",[v("li",[t._v("/docs")]),t._v(" "),v("li",[t._v("/docs/Web/")]),t._v(" "),v("li",[t._v("/docs/Web/HTTP")])]),t._v(" "),v("h3",{attrs:{id:"访问"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#访问"}},[t._v("#")]),t._v(" 访问")]),t._v(" "),v("p",[t._v("浏览器通过 "),v("code",[t._v("document.cookie")]),t._v(" 属性可创建新的 Cookie，也可通过该属性访问非 HttpOnly 标记的 Cookie。")]),t._v(" "),v("div",{staticClass:"language-html extra-class"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[t._v('document.cookie = "yummy_cookie=choco";\ndocument.cookie = "tasty_cookie=strawberry";\nconsole.log(document.cookie);\n')])])]),v("p",[t._v("标记为 "),v("strong",[t._v("HttpOnly")]),t._v(" 的 Cookie "),v("mark",[t._v("不能被 JavaScript 脚本调用")]),t._v("。这在一定程度上可以避免 [[attack-tech#一、跨站脚本攻击 | XSS]] 攻击。")]),t._v(" "),v("div",{staticClass:"language-html extra-class"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[t._v("Set-Cookie: id=a3fWa; Expires=Wed, 21 Oct 2015 07:28:00 GMT; Secure; HttpOnly\n")])])]),v("p",[t._v("标记为 "),v("strong",[t._v("Secure")]),t._v(" 的 Cookie "),v("mark",[t._v("只能通过HTTPS 协议")]),t._v("发送给服务端。")]),t._v(" "),v("blockquote",[v("p",[t._v("但即便设置了 Secure 标记，敏感信息也不应该通过 Cookie 传输，因为 Cookie 有其固有的不安全性，Secure 标记也无法提供确实的安全保障。")])]),t._v(" "),v("p",[t._v("可以直接设置"),v("strong",[t._v("浏览器禁用cookie")]),t._v("。")]),t._v(" "),v("h2",{attrs:{id:"storage"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#storage"}},[t._v("#")]),t._v(" Storage")]),t._v(" "),v("p",[t._v("主要是sessionStorage 和 localStorage。，两者都属于HTML5 WebStorage，目的在于客户端存储，不参与与服务端通信。")]),t._v(" "),v("p",[t._v("一般大小为5M。")]),t._v(" "),v("ul",[v("li",[t._v("sessionStorage在当前会话中有效（同源同窗口），关闭标签页或浏览器失效。")]),t._v(" "),v("li",[t._v("localStorage在同源页面都有效，且更加持久有效，除非手动在浏览器中清除。")])]),t._v(" "),v("h2",{attrs:{id:"indexdb"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#indexdb"}},[t._v("#")]),t._v(" indexDB")]),t._v(" "),v("p",[t._v("浏览器提供的本地数据库，可以存储大量的数据。")]),t._v(" "),v("h2",{attrs:{id:"缓存机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缓存机制"}},[t._v("#")]),t._v(" 缓存机制")]),t._v(" "),v("p",[t._v("在一段时间内保留已接收到的 web 资源的一个副本，有需要时可直接使用该副本，而不需向服务器请求。")]),t._v(" "),v("p",[t._v("web 资源的缓存策略一般由服务器来指定，可以分为两种——缓存策略和协商缓存策略。")]),t._v(" "),v("h3",{attrs:{id:"强缓存策略"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#强缓存策略"}},[t._v("#")]),t._v(" 强缓存策略")]),t._v(" "),v("p",[t._v("如果缓存资源有效，则直接使用缓存资源，不必再向服务器发起请求。")]),t._v(" "),v("p",[t._v("服务器可通过http 头信息中的 "),v("code",[t._v("Expires")]),t._v("和"),v("code",[t._v("Cache-Control")]),t._v(" 属性指定。")]),t._v(" "),v("p",[v("code",[t._v("Expires")]),t._v("：服务器的绝对时间表示，可能与客户端的不一致。\n"),v("code",[t._v("Cache-Control")]),t._v("："),v("code",[t._v("Expires")]),t._v("的改进版本，可以使用相对时间。也可以设置某些关键词：")]),t._v(" "),v("ul",[v("li",[t._v("private：只能被客户端缓存，不能被代理服务器缓存。")]),t._v(" "),v("li",[t._v("no-store：不能被缓存。")]),t._v(" "),v("li",[t._v("no-cache：强制确认缓存，需要先向源服务器验证缓存资源的有效性（"),v("strong",[t._v("协商缓存")]),t._v("）。")]),t._v(" "),v("li",[t._v("max-age：指定缓存资源在缓存服务器中保存的时间。")])]),t._v(" "),v("blockquote",[v("p",[t._v("Cache-Control 的优先级要高于 Expires 。")])]),t._v(" "),v("h3",{attrs:{id:"协商缓存策略"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存策略"}},[t._v("#")]),t._v(" 协商缓存策略")]),t._v(" "),v("p",[t._v("会向服务器询问资源"),v("mark",[t._v("是否有修改")]),t._v("，如果没修改，服务器返回"),v("strong",[t._v("304 Not Modified")]),t._v("。")]),t._v(" "),v("p",[t._v("通过http "),v("strong",[t._v("响应报文")]),t._v("中的头信息的 "),v("code",[t._v("Etag")]),t._v(" 和 "),v("code",[t._v("Last-Modified")]),t._v(" 属性设置。")]),t._v(" "),v("p",[v("code",[t._v("Last-Modified")]),t._v("：指出资源最后一次修改时间，精确到秒级。浏览器询问时带上该参数值，与服务器比较。")]),t._v(" "),v("div",{staticClass:"language-html extra-class"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[t._v("请求报文：If-Modified-Since: Wed, 21 Oct 2015 07:28:00 GMT\n")])])]),v("p",[v("code",[t._v("Etag")]),t._v("：改进版本。资源的唯一标识符。")]),t._v(" "),v("div",{staticClass:"language-html extra-class"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[t._v('请求报文：If-None-Match: "82e22293907ce725faf67773957acd12"\n')])])]),v("blockquote",[v("p",[t._v("Etag 的优先级更高。\n考虑负载平衡时，服务器上 Etag 的值都不一样，不应该使用Etag 属性。")])]),t._v(" "),v("blockquote",[v("p",[t._v("在实际的缓存机制中，强缓存策略和协商缓存策略是一起合作使用的，先用强缓存策略判断，后用协商缓存策略。")])]),t._v(" "),v("h1",{attrs:{id:"bom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#bom"}},[t._v("#")]),t._v(" BOM")]),t._v(" "),v("p",[t._v("浏览器对象模型，定义了与浏览器进行交互的方法和接口。")]),t._v(" "),v("h2",{attrs:{id:"window"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#window"}},[t._v("#")]),t._v(" window")]),t._v(" "),v("p",[t._v("BOM的核心对象是window，表示浏览器的一个实例。"),v("mark",[t._v("在浏览器中")]),t._v("，window对象有双重角色：")]),t._v(" "),v("ul",[v("li",[t._v("JS访问浏览器窗口的一个接口。")]),t._v(" "),v("li",[t._v("ECMAScript规定的Global对象。")])]),t._v(" "),v("p",[t._v("window对象包含属性：document、location、navigator、screen、history、frames.")]),t._v(" "),v("h2",{attrs:{id:"history"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#history"}},[t._v("#")]),t._v(" history")]),t._v(" "),v("h3",{attrs:{id:"地址栏"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#地址栏"}},[t._v("#")]),t._v(" 地址栏")]),t._v(" "),v("p",[t._v("一些api可以同时修改浏览器的地址栏及历史记录。\n"),v("code",[t._v("pushState()")]),t._v("：往浏览器的历史记录中添加一条新记录。\n"),v("code",[t._v("replaceState()")]),t._v("：用当前的记录替换掉原来的记录。\n"),v("code",[t._v("window.onpopstate")]),t._v("：监听浏览器前进、后退事件。")]),t._v(" "),v("p",[t._v("用途：结合"),v("code",[t._v("Ajax")]),t._v("，可以实现浏览器无刷新前进后退。")]),t._v(" "),v("blockquote",[v("p",[t._v("仅在同域名下有效。")])]),t._v(" "),v("h1",{attrs:{id:"dom"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dom"}},[t._v("#")]),t._v(" DOM")]),t._v(" "),v("p",[t._v("文档对象模型，定义了与HTML文档交互的方法和接口。DOM描绘了一个层次化的节点树，允许开发人员添加、移除和修改页面的某一部分。")]),t._v(" "),v("p",[t._v("DOM的节点分为三类：元素节点、文本节点和属性节点")]),t._v(" "),v("h2",{attrs:{id:"document"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#document"}},[t._v("#")]),t._v(" document")]),t._v(" "),v("p",[t._v("DOM的核心对象是document，表示页面文档的一个实例。同时，也是window对象的一个属性。")]),t._v(" "),v("h2",{attrs:{id:"事件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),v("p",[t._v("文档或浏览器窗口中发生的一些特定的交互瞬间。JS与HTML之间的交互是通过事件实现的。")]),t._v(" "),v("h3",{attrs:{id:"事件模型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件模型"}},[t._v("#")]),t._v(" 事件模型")]),t._v(" "),v("p",[t._v("定义事件发生时的处理流程。有三种事件模型：")]),t._v(" "),v("p",[v("strong",[t._v("DOM0 级模型")]),t._v("：事件不会传播，没有事件流的概念。")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" btn "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.btn'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nbtn"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onclick "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fun"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),v("p",[v("strong",[t._v("IE 事件模型")]),t._v("：有两个过程。"),v("mark",[t._v("默认情况")]),t._v("。")]),t._v(" "),v("ul",[v("li",[t._v("事件处理阶段：事件到达目标元素，触发目标元素的监听函数。")]),t._v(" "),v("li",[t._v("事件冒泡阶段：事件从目标元素冒泡到document，触发经过的节点的相应事件的监听函数。")])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[t._v("btn"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("attachEvent")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘onclick’"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" showMessage"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),v("p",[v("strong",[t._v("DOM2 级事件模型")]),t._v("：包含三个过程。事件捕获阶段、事件处理阶段、事件冒泡阶段。")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第三个参数指定事件是否在捕获阶段执行。")]),t._v("\nbtn"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("‘click’"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" showMessage"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),v("h3",{attrs:{id:"事件对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件对象"}},[t._v("#")]),t._v(" 事件对象")]),t._v(" "),v("p",[t._v("当一个事件被触发时，会创建一个事件对象"),v("code",[t._v("Event")]),t._v("。 这个对象包含与该事件相关的属性或者方法，作为第一个参数传递给监听函数。")]),t._v(" "),v("p",[t._v("事件对象常用属性:")]),t._v(" "),v("ul",[v("li",[t._v("type：取事件类型")]),t._v(" "),v("li",[t._v("target：事件目标")]),t._v(" "),v("li",[t._v("stopPropagation()：阻止事件冒泡")]),t._v(" "),v("li",[t._v("preventDefault()：阻止事件默认行为")])]),t._v(" "),v("h3",{attrs:{id:"事件委托"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#事件委托"}},[t._v("#")]),t._v(" 事件委托")]),t._v(" "),v("p",[t._v("利用事件冒泡的机制，通过在父节点绑定监听函数，从而监听多个子节点的事件。\n比起每个子节点都绑定监听函数，这样子的好处：")]),t._v(" "),v("ul",[v("li",[t._v("减少内存上的消耗。")]),t._v(" "),v("li",[t._v("实现事件的动态绑定。")])]),t._v(" "),v("h2",{attrs:{id:"tricks"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#tricks"}},[t._v("#")]),t._v(" Tricks")]),t._v(" "),v("ol",[v("li",[t._v("innerHTML 与 outerHTML：")])]),t._v(" "),v("div",{staticClass:"language-html extra-class"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[t._v("HTML 元素："),v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("content"),v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("br")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\ninnerHTML：content"),v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("br")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v(";\nouterHTML："),v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("content"),v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("br")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(";\ninnerText：content;\nouterText：content;\n")])])]),v("ol",{attrs:{start:"2"}},[v("li",[t._v("mouseover 和 mouseenter ：\n当鼠标移动到元素上时就会这两个事件，但mouseenter 不会冒泡。")])]),t._v(" "),v("p",[t._v("由于 mouseenter 不支持事件冒泡，导致在一个元素的子元素上进入或离开的时候会触发其 mouseover 和 mouseout 事件，但是却不会触发 mouseenter 和 mouseleave 事件。")]),t._v(" "),v("h1",{attrs:{id:"相关技术"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#相关技术"}},[t._v("#")]),t._v(" 相关技术")]),t._v(" "),v("h2",{attrs:{id:"二维码登录"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#二维码登录"}},[t._v("#")]),t._v(" 二维码登录")]),t._v(" "),v("ol",[v("li",[t._v("浏览器与server端建立一个长连接，后展示二维码。")]),t._v(" "),v("li",[t._v("扫描二维码时手机向服务器发起一个认证。")]),t._v(" "),v("li",[t._v("认证成功后服务器向浏览器授权。")])]),t._v(" "),v("h2",{attrs:{id:"base64"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#base64"}},[t._v("#")]),t._v(" base64")]),t._v(" "),v("p",[t._v("base64编码是一种图片处理格式，通过特定的算法将图片编码成一长串字符串。在页面上显示的时候，可以用该字符串来代替图片的url属性。")]),t._v(" "),v("p",[t._v("优点：减少一个图片的HTTP请求。")]),t._v(" "),v("p",[t._v("缺点：")]),t._v(" "),v("ul",[v("li",[t._v("文件大小变大。")]),t._v(" "),v("li",[t._v("无法直接缓存图片，只能缓存整个包含base64的文件。")]),t._v(" "),v("li",[t._v("兼容性的问题，ie8以前的浏览器不支持。")])]),t._v(" "),v("blockquote",[v("p",[t._v("一般一些网站的小图标可以使用base64图片来引入。")])])])}),[],!1,null,null,null);a.default=_.exports}}]);